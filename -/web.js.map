{"version":3,"sources":["atom.view.tree.ts","../../atom/atom.view.ts","-","../../../mol/mol.ts","../../../mol/mol.web.jam.js","chart.view.tree.ts","chart.view.ts","app.view.tree.ts","../app.view.ts"],"names":[],"mappings":"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","file":"web.js","sourcesContent":["","namespace $.$$ {\n// ============================================================================\n\nfunction $tg2_atom_store() {\n\n}\n\n// ============================================================================\n}",null,"declare namespace $ {}\nexport = $\nmodule.exports\n",null,"","namespace $.$$ {\n// ============================================================================\n\n// export function Tg2Chart(p: {width: number, minHeight: number}) {\n//   const dom_node = document.createElement('div')\n//   dom_node.style.width = p.width + 'px'\n//   dom_node.style.minHeight = p.minHeight + 'px'\n//   dom_node.innerText = p.width + 'x' + p.minHeight\n//   dom_node.classList.add('tg2-chart')\n//   return {\n//     dom_node: () => dom_node\n//   }\n// }\n\n// ============================================================================\n}","","namespace $.$$ {\n// ============================================================================\nexport interface StyleProps {[prop: string]: any}\nexport interface DomNode {[prop: string]: any}\nexport type ElemDomNode = () => HTMLElement\nexport type ElemUpdateDomStyle = (p: StyleProps) => void\nexport type ElemUpdateDomNode = (p: DomNode) => void\nexport type ElemAppendChild = (child: HTMLElement | Elem) => void\nexport interface Elem {\n  dom_node: ElemDomNode,\n  updateDomStyle: ElemUpdateDomStyle,\n  updateDomProps: ElemUpdateDomNode,\n  appendChild: ElemAppendChild,\n}\n\ntype EasingFunc = (t: number) => number\nexport const Easing = <{[key: string]: EasingFunc}>{\n  // no easing, no acceleration\n  linear: function (t: number) { return t },\n  // accelerating from zero velocity\n  easeInQuad: function (t: number) { return t*t },\n  // decelerating to zero velocity\n  easeOutQuad: function (t: number) { return t*(2-t) },\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: function (t: number) { return t<.5 ? 2*t*t : -1+(4-2*t)*t },\n  // accelerating from zero velocity\n  easeInCubic: function (t: number) { return t*t*t },\n  // decelerating to zero velocity\n  easeOutCubic: function (t: number) { return (--t)*t*t+1 },\n  // acceleration until halfway, then deceleration\n  easeInOutCubic: function (t: number) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 },\n  // accelerating from zero velocity\n  easeInQuart: function (t: number) { return t*t*t*t },\n  // decelerating to zero velocity\n  easeOutQuart: function (t: number) { return 1-(--t)*t*t*t },\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: function (t: number) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t },\n  // accelerating from zero velocity\n  easeInQuint: function (t: number) { return t*t*t*t*t },\n  // decelerating to zero velocity\n  easeOutQuint: function (t: number) { return 1+(--t)*t*t*t*t },\n  // acceleration until halfway, then deceleration\n  easeInOutQuint: function (t: number) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\n}\n\nlet _pxStyleProps: {[prop: string]: boolean}\nfunction isPxStyleProp(prop: string) {\n  if (!_pxStyleProps) {\n    _pxStyleProps = {}\n    const pxStyleProps = ['width', 'height']\n    const sides = ['left', 'top', 'right', 'bottom']\n    pxStyleProps.push(...sides)\n    for (let i = 0, count = sides.length; i < count; i++) {\n      let side = sides[i]\n      side = side.charAt(0).toUpperCase() + side.slice(1)\n      pxStyleProps.push('margin' + side)\n      pxStyleProps.push('padding' + side)\n    }\n    for (let i = 0, count = pxStyleProps.length; i < count; i++) _pxStyleProps[pxStyleProps[i]] = true\n  }\n  return !!_pxStyleProps[prop]\n}\n\nconst isArray = Array.isArray;\nconst keyList = Object.keys;\nconst hasProp = Object.prototype.hasOwnProperty;\nexport function is_deep_equal(a: any, b: any) : boolean {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA != arrB) return false\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!is_deep_equal(a[i], b[i])) {\n          const result = false\n          return result\n        }\n      return true;\n    }\n\n    let setA = a instanceof Set\n    let setB = b instanceof Set\n    if (setA != setB) return false\n    if (setA && setB) {\n      if (a.size != b.size) return false\n      let iter = a.keys()\n      let next = iter.next()\n      while (!next.done) {\n        if (!b.has(next.value)) return false\n        next = iter.next()\n      }\n      iter = b.keys()\n      next = iter.next()\n      while (!next.done) {\n        if (!a.has(next.value)) return false\n        next = iter.next()\n      }\n      return true\n    }\n\n    let mapA = a instanceof Map\n    let mapB = b instanceof Map\n    if (mapA != mapB) return false\n    if (mapA && mapB) {\n      const result = is_deep_equal([...a], [...b])\n      return result\n    }\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!is_deep_equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n}\n\nexport function createElem(p?: {\n  elem?: string | HTMLElement,\n  ns?: string,\n  cls?: string,\n  parent?: HTMLElement | Elem,\n  attrs?: {[prop: string]: any},\n  style?: {[prop: string]: any},\n  props?: {[prop: string]: any},\n  events?: {[prop: string]: EventListener},\n  events_async?: {[prop: string]: EventListener},\n  events_sync?: {[prop: string]: EventListener},\n}) {\n  const dom_node = p && p.elem && typeof p.elem != 'string' ?\n    p.elem as HTMLElement :\n    (p && p.ns && p.elem ?\n      document.createElementNS(p.ns, p.elem as string) as HTMLElement :\n      document.createElement(p && p.elem as string || 'div')\n    )\n  const style = dom_node.style\n  function setStyleProp(prop: string, value: any) {\n    if (Number.isFinite(value)) {\n      if (prop == 'opacity') {\n        value += ''\n      } else if (isPxStyleProp(prop)) {\n        value += 'px'\n      }\n    } else if (typeof value == 'boolean') {\n      if (prop == 'visibility') value = value ? 'visible' : 'hidden'\n    }\n    if (typeof value != 'string') {\n      const msg = `prop: ${prop}, value: ${value}`\n      console.error(msg)\n      console.trace()\n      throw new Error(msg)\n    } else {\n      style[prop] = value\n    }\n  }\n\n  if (p.attrs) for (let attr in p.attrs) dom_node.setAttribute(attr, p.attrs[attr])\n  if (p.style) for (let prop in p.style) setStyleProp(prop, p.style[prop]) //style[prop] = p.style[prop]\n  if (p.props) for (let prop in p.props) dom_node[prop] = p.props[prop]\n  if (p.events) for (let event in p.events) dom_node.addEventListener(event, p.events[event], false)\n  if (p.events_async) for (let event in p.events_async) dom_node.addEventListener(event, p.events_async[event], {passive: true})\n  if (p.events_sync) for (let event in p.events_sync) dom_node.addEventListener(event, p.events_sync[event], {passive: false})\n\n  if (p && p.cls) dom_node.classList.add(p.cls)\n  if (p && p.parent) {\n    if ((p.parent as Elem).dom_node) {\n      (p.parent as Elem).appendChild(dom_node)\n    } else {\n      (p.parent as HTMLElement).appendChild(dom_node)\n    }\n  }\n  let _raf : number\n  let _styleProps = {} as {[prop: string]: any}\n  let _nodeProps = {} as {[prop: string]: any}\n  let _nodeAttrs = {} as {[prop: string]: any}\n  function applyUpdates() {\n    if (_raf === void 0) _raf = requestAnimationFrame(function () {\n      for (let prop in _styleProps) {\n        setStyleProp(prop, _styleProps[prop])\n        // style[prop] = _styleProps[prop]\n        delete _styleProps[prop]\n      }\n      for (let prop in _nodeProps) {\n        dom_node[prop] = _nodeProps[prop]\n        delete _nodeProps[prop]\n      }\n      for (let attr in _nodeAttrs) {\n        dom_node.setAttribute(attr, _nodeAttrs[attr])\n        delete _nodeAttrs[attr]\n      }\n      _raf = void 0\n    })\n  }\n  const self = {\n    dom_node() {\n      return dom_node\n    },\n    updateDomStyle(styleProps: {[prop: string]: any}) {\n      for (let prop in styleProps) _styleProps[prop] = styleProps[prop]\n      applyUpdates()\n    },\n    updateDomProps(nodeProps: {[prop: string]: any}) {\n      for (let prop in nodeProps) _nodeProps[prop] = nodeProps[prop]\n      applyUpdates()\n    },\n    updateDomAttr(nodeAttrs: {[prop: string]: any}, immediatly = false) {\n      if (immediatly) {\n        for (let attr in nodeAttrs) dom_node.setAttribute(attr, nodeAttrs[attr])\n      } else {\n        for (let attr in nodeAttrs) _nodeAttrs[attr] = nodeAttrs[attr]\n        applyUpdates()\n      }\n    },\n    appendChild(child: HTMLElement | Elem) {\n      const child_node = (child as Elem).dom_node ? (child as Elem).dom_node() : child as HTMLElement\n      dom_node.appendChild(child_node)\n      return self\n    }\n  }\n  return self\n}\n\nlet bodyCursor: {origin: any, cursor: string}\nlet bodyCursorRaf: number\nfunction setBodyCursor(p: {origin: any, cursor: string}) {\n  if (\n    (\n      bodyCursor === void 0 ||\n      p.cursor !== 'default' ||\n      p.origin === bodyCursor.origin && p.cursor != bodyCursor.cursor ||\n      false\n    )\n  ) {\n    bodyCursor = p\n    if (bodyCursorRaf === void 0) bodyCursorRaf = requestAnimationFrame(function() {\n      if (document.body.style.cursor != p.cursor) document.body.style.cursor = p.cursor\n      bodyCursorRaf = void 0\n    })\n  }\n}\n\ninterface MasterProvider {\n  atoms: () => {[name: string]: any},\n  values: () => any,\n}\ntype AtomValueDef = (val?: any, prev?: any) => any\ntype AtomMasteredValueDef = (p: MasterProvider, val?: any, prev?: any) => any\ntype AtomMasteredValueShortcutDef = (v: (name: string) => any, val?: any) => any\nexport enum AtomState { invalid, error, valid }\nexport enum AtomType { lazy, force }\nexport interface AtomMasteredDef {\n  masters: string[],\n  value?: AtomMasteredValueDef,\n  v?: AtomMasteredValueShortcutDef,\n  d?: boolean,\n}\n\nexport enum AtomValueDefType {none, simple, mastered, shortcut}\nexport function createAtomStore() {\n\n  let _force_slaves_to_update = <{[name: string]: true}>{}\n  let _raf: number\n  function _update_force_slaves() {\n    _raf = void 0\n    const slaves = Object.keys(_force_slaves_to_update)\n    _force_slaves_to_update = {}\n    for (let i = 0, count = slaves.length; i < count; i++) {\n      (self as any).get(slaves[i]).value()\n    }\n  }\n  function update_force_slaves(slaves: string[]) {\n    for (let i = 0, count = slaves.length; i < count; i++) {\n      _force_slaves_to_update[slaves[i]] = true\n    }\n    if (_raf === void 0) _raf = requestAnimationFrame(_update_force_slaves)\n  }\n  function createAtom(\n    store: any,\n    name: string, // for debug purpose only\n    p?: AtomValueDef | AtomMasteredDef,\n    type = AtomType.lazy\n  ) {\n    let _store = store\n    let _state = AtomState.invalid\n    let _value: any\n    let _error: any\n    let _lazy_slaves = [] as string[]\n    let _own_force_slaves = [] as string[]\n    let _force_slaves: string[]\n    const _masters = p && (typeof p == 'function' ? null : (p as AtomMasteredDef).masters.slice()) as string[]\n    let _value_def_type = AtomValueDefType.none\n    let _value_def: AtomValueDef | AtomMasteredValueDef\n    let _value_def_raf: any\n    let _value_def_invalid_atoms: string[]\n    if (p) {\n      if (typeof p == 'function') {\n        _value_def = p as AtomValueDef\n        _value_def_type = AtomValueDefType.simple\n      } else {\n        const mastered_def = p as AtomMasteredDef\n        if (mastered_def.value) {\n          _value_def = mastered_def.value\n          _value_def_type = AtomValueDefType.mastered\n        } else if (mastered_def.v) {\n          _value_def = function value(p: MasterProvider, val?: any) {\n            // let invalid_atoms: string[]\n            const v = p.values()\n            if (!v && mastered_def.d) {\n              _value_def_invalid_atoms = Object.keys(p.atoms()).filter(name => p.atoms()[name].state() !== AtomState.valid)\n              if (_value_def_raf === void 0) _value_def_raf = setTimeout(() => {\n                _value_def_raf = void 0\n                // _value_def_invalid_atoms = Object.keys(p.atoms()).filter(name => !atom_is_valid_value(p.atoms()[name]()))\n                console.warn(name + ': atom update stopped by ', _value_def_invalid_atoms)\n              }, 200)\n            }\n            if (v) {\n              if (mastered_def.d) { clearTimeout(_value_def_raf); _value_def_raf = void 0 }\n                // console.log(name, invalid_atoms)\n              const ret = mastered_def.v(v.get, val)\n              if (ret !== void 0) val = ret\n            }\n            return val\n          }\n          _value_def_type = AtomValueDefType.mastered\n        } else {\n          const msg = 'atom \"' + name + '\" has no value def, though mastered'\n          console.error(msg)\n          console.trace()\n          throw new Error(msg)\n        }\n      }\n    }\n    function value_def(val?: any) {\n      return _value_def_type == AtomValueDefType.simple ?\n        (_value_def as AtomValueDef)(val, _value) :\n        (_value_def as AtomMasteredValueDef)(master_provider, val, _value)\n    }\n\n    const master_provider: MasterProvider = _value_def_type !== AtomValueDefType.mastered  ? void 0 :\n      {\n        atoms: master_atoms,\n        values() {\n          const atoms = master_atoms()\n          const result = <{[name: string]: any}>{}\n          for (let i = 0, count = _masters.length; i < count; i++) {\n            const name = _masters[i]\n            const atom = atoms[name]\n            const value = atom.value()\n            if (atom.state() != AtomState.valid) return\n            result[name] = value\n          }\n          function get(value_id: string | number) {\n            let value_name: string\n            if (typeof value_id === 'string') {\n              value_name = value_id\n            } else if (Number.isFinite(value_id)) {\n              const master_idx = value_id as number\n              if (0 <= master_idx && master_idx < _masters.length) {\n                value_name = _masters[master_idx]\n              } else {\n                const msg = 'atom::' + name + ': value_id \"' + value_id + '\" is out of masters range'\n                console.error(msg)\n                console.trace()\n                throw new Error(msg)\n              }\n            } else {\n              // TODO:\n            }\n            const value = result[value_name]\n            if (value === void 0) {\n              const msg = 'atom::' + name + ': value \"' + value_name + '\" not found in master values'\n              console.error(msg)\n              console.trace()\n              throw new Error(msg)\n            }\n            return value\n          }\n          get.get = get // for backward compatibility\n          return get\n        },\n      }\n\n    const _type = type\n    function _spread_state(state?: AtomState, error?: any) {\n      if (state === void 0) state = _state\n      if (error === void 0) error = _error\n      for (let i = 0, count = _lazy_slaves.length; i < count; i++) {\n        const slave = store.get(_lazy_slaves[i])\n        slave.state(state, error)\n      }\n      for (let i = 0, count = _own_force_slaves.length; i < count; i++) {\n        const slave = store.get(_own_force_slaves[i])\n        slave.state(state, error)\n      }\n      if (state === AtomState.invalid) {\n        const slaves = force_slaves()\n        if (slaves.length) {\n          // console.log({name})\n          update_force_slaves(slaves)\n        }\n      }\n    }\n    function force_slaves() {\n      if (!_force_slaves) {\n        _force_slaves = _own_force_slaves.slice()\n        for(let i = 0, count = _lazy_slaves.length; i < count; i++) {\n          const sub = _store.get(_lazy_slaves[i]).force_slaves()\n          _force_slaves.push(...sub)\n        }\n      }\n      return _force_slaves\n    }\n    function _invalidate_force_slaves() {\n      if (_masters)\n        for (let i = 0, count = _masters.length; i < count; i++)\n          _store.get(_masters[i]).invalidate_force_slaves()\n    }\n    let _master_atoms: {[name: string]: any}\n    function master_atoms() {\n      if (!_master_atoms) {\n        _master_atoms = {}\n        for (let i = 0, count = _masters.length; i < count; i++) {\n          const name = _masters[i]\n          const atom = _store.get(name)\n          _master_atoms[name] = atom\n        }\n      }\n      return _master_atoms\n    }\n    function atom_is_valid_value(val?: any) {\n      return !(val === void 0 || Number.isNaN(val))\n    }\n    function atom_update(val?: any) {\n      let result\n      // if (name == 'mainRangeX' && val === void 0) console.warn({result, val, _state})\n      if (_value_def) {\n        try {\n          const prev_value = _state === AtomState.valid ? _value : void 0\n          result = _value = value_def(val)\n          // if (_value !== void 0 && !Number.isNaN(_value)) self.state(AtomState.valid)\n          // if (name == 'mainRangeX') console.log({result, _value, prev_value})\n          if (_value !== prev_value) {\n            self.state(_value === void 0 || Number.isNaN(_value) ? AtomState.invalid : AtomState.valid)\n          }\n        } catch (err) {\n          console.error(err)\n          self.state(AtomState.error, result = err)\n        }\n      }\n      // if (name == 'mainRangeX' && val === void 0 && result !== void 0) console.error({result, val, _state})\n      return result\n    }\n    function atom_value(val?: any) : any {\n      let result\n      // if (name == 'previewOffsetY') console.warn({val, _value, _state, _value_def})\n      if (val !== void 0) {\n      // if (name == 'width') console.error({name, val})\n        // if (name == '')\n        if (!is_deep_equal(val, _value)) {\n\n          if (!_value_def) {\n            result = _value = val\n            self.state(AtomState.valid)\n          } else {\n            result = atom_update(val)\n\n            // try {\n            //   const prev_value = _value\n            //   result = _value = value_def(val)\n            //   if (_value !== prev_value) {\n            //     self.state(_value === void 0 || Number.isNaN(_value) ? AtomState.invalid : AtomState.valid)\n            //   }\n            // } catch (err) {\n            //   console.error(err)\n            //   self.state(AtomState.error, result = err)\n            // }\n\n          }\n\n        }\n      } else if (_state === AtomState.valid) {\n        result = _value\n      } else if (_state === AtomState.error) {\n        result = _error\n      } else if (_state === AtomState.invalid && _value_def) {\n      // } else if (_state === AtomState.invalid) {\n        result = atom_update(val)\n\n        // try {\n        //   result = _value = value_def()\n        //   if (_value !== void 0 && !Number.isNaN(_value)) self.state(AtomState.valid)\n        // } catch (err) {\n        //   console.error(err)\n        //   self.state(AtomState.error, result = err)\n        // }\n\n      }\n      // if (name == 'width') console.error({result, val, _value, _state, _value_def})\n      return result as any\n    }\n    atom_value.is_valid_value = atom_is_valid_value\n    atom_value.update = atom_update\n    atom_value.value = atom_value\n    atom_value.type = function atom_type() { return _type }\n    atom_value.state = function atom_state(val?: AtomState, err?: any) {\n      if (val !== void 0 && (val !== _state || val === AtomState.valid || val === AtomState.error && err && err !== _error)) {\n        _state = val\n        if (_state === AtomState.error) {\n          _error = err\n          _spread_state()\n        } else {\n          _error = void 0\n          _spread_state(AtomState.invalid)\n        }\n      }\n      return _state\n    }\n    atom_value.error = () => _error\n    atom_value._value = () => _value\n    atom_value.masters = () => _masters && _masters.slice()\n    atom_value.add_slave = (name: string) => {\n      if (store.get(name).type() == AtomType.lazy) {\n        if (_lazy_slaves.indexOf(name) < 0) _lazy_slaves.push(name)\n      } else {\n        if (_own_force_slaves.indexOf(name) < 0) _own_force_slaves.push(name)\n        _invalidate_force_slaves()\n      }\n    }\n    atom_value.force_slaves = force_slaves\n    atom_value.invalidate_force_slaves = () => {\n      _force_slaves = void 0\n      _invalidate_force_slaves()\n    }\n    const self = atom_value\n    return self\n  }\n\n  let _store = <{ [name: string] : any }>{}\n  function get(name: string) {\n    if (_store[name]) return _store[name]\n    const msg = 'no atom \"' + name + '\"'\n    console.error()\n    console.trace()\n    throw new Error(msg)\n  }\n  function def(name: string,\n    p?: AtomValueDef | AtomMasteredDef,\n    type = AtomType.lazy\n  ) {\n    if (_store[name]) {\n      const msg = 'atom \"' + name + '\" already exists'\n      console.error()\n      console.trace()\n      throw new Error(msg)\n    }\n\n    const atom = _store[name] = createAtom(self, name, p, type)\n    const masters = atom.masters()\n    if (masters) {\n      const count = masters.length\n      for (let i = 0; i < count; i++) {\n        const master_atom = _store[masters[i]]\n        if (master_atom) {\n          master_atom.add_slave(name)\n        } else {\n          const msg = 'atom \"' + masters[i] + '\" can not be used as master before definition'\n          console.error(msg)\n          console.trace()\n          throw new Error(msg)\n        }\n      }\n      if (atom.type() == AtomType.force) atom.value()\n    }\n  }\n  function def_mastered_shortcut(name: string, masters: string[], v: AtomMasteredValueShortcutDef, p?: { d?: boolean, t?: AtomType}) {\n    const type = (p && p.t) !== void 0 ? p.t : AtomType.lazy\n    const mastered_def = {masters, v, d: p && p.d}\n    return def(name, mastered_def, type)\n  }\n  function def_write_shortcut(name: string, w: (val: any) => any, type = AtomType.lazy) {\n    const value = (val?: any) => {\n      if (val !== void 0) {\n        const ret = w(val)\n        if (ret !== void 0) val = ret\n      }\n      return val\n    }\n    return def(name, value, type)\n  }\n  function def_read_write_shortcut(name: string, r: () => any, w: (val: any) => any, type = AtomType.lazy) {\n    const value = (val?: any) => {\n      if (val === void 0) {\n        val = r()\n      } else {\n        const ret = w(val)\n        if (ret !== void 0) val = ret\n      }\n      return val\n    }\n    return def(name, value, type)\n  }\n  function def_read_shortcut(name: string, r: () => any, type = AtomType.lazy) {\n    const value = (val?: any) => {\n      if (val === void 0) val = r()\n      return val\n    }\n    return def(name, value, type)\n  }\n  get.get = get\n  get.def = def\n  get.m = def_mastered_shortcut\n  get.w = def_write_shortcut\n  get.rw = def_read_write_shortcut\n  get.r = def_read_shortcut\n  const self = get\n  return self\n}\n\n// ===========================================================================\n// ===========================================================================\n\nexport const enum Th2ChartMode {mode0, mode1}\nexport const enum ScrollAction {none, left, right, drag}\nexport function tg2_chart(chart_mode: Th2ChartMode) {\n  const _atoms = createAtomStore()\n  // _atoms.def('width')//, (val: number) => elem.updateDomStyle({width: val}))\n  _atoms.w('width', (val: number) => val)\n  _atoms.w('paddingHor', (val: number) => {\n    check_box_bar_elem.updateDomStyle({ marginLeft: val, marginRight: val })\n    scroll_elem.updateDomStyle({ marginLeft: val, marginRight: val })\n    title_elem.updateDomStyle({ paddingLeft: val, paddingRight: val })\n  })\n  _atoms.rw('is_visible',\n    () => false,\n    (val?: number) => elem.updateDomStyle({ visibility: val })\n  )\n  _atoms.w('title', (val: string) => {\n    const is_visible = !!val\n    title_elem.updateDomStyle({ display: is_visible ? 'block' : 'none' })\n    if (is_visible) {\n      title_elem.updateDomProps({ innerText: val })\n    }\n  })\n  _atoms.w('minHeight', (val: number) => {\n      if (val < grid_min_height) throw new Error(`${{val, grid_min_height}}`)\n  })\n  _atoms.m('grid_height', ['minHeight'], (v: any) => {\n    let height = v(0) - grid_height_correction\n    grid_elem.updateDomStyle({height})\n    return height\n  }, { t: AtomType.force })\n  _atoms.m('scroll_width', ['width', 'paddingHor'], (v: any) => {\n    const result = v(0) - 2 * v(1)\n    // console.error(result)\n    return result\n  }, {d: true} )\n  _atoms.def('scroll_mid', {\n    masters: ['scroll_width'],\n    value(p: MasterProvider, val?: {width: number, left: number, total?: number}, prev?: {width: number, left: number, total: number}) {\n      const v = p.values()\n      if (v) {\n        if (val === void 0) {\n          if (!prev) {\n            val = {\n              width: scroll_mid_width_min(),\n              left: void 0\n            }\n          } else {\n            const ratio = v.get('scroll_width') / prev.total\n            val = {\n              width: Math.round(prev.width * ratio),\n              left: Math.round(prev.left * ratio),\n            }\n          }\n        }\n        if (!val.total) val.total = v.get('scroll_width')\n        val.width = Math.min(val.total, Math.max( scroll_mid_width_min(), val.width))\n        val.left = val.left === void 0 ? val.total - val.width : Math.min(val.total - val.width, Math.max(0, val.left))\n\n        if (!prev || val.left !== prev.left) {\n          scroll_left_elem.updateDomStyle({width: val.left + scroll_selector_round_compensation})\n          scroll_mid_elem.updateDomStyle({left: val.left})\n        }\n        if (!prev || val.width !== prev.width) {\n          scroll_mid_elem.updateDomStyle({width: val.width})\n          scroll_mid_elem.updateDomAttr({viewBox: scroll_mid_elem_viewBox(val.width) })\n          scroll_mid_path_elem.updateDomAttr({d: scroll_mid_path_elem_d(val.width) })\n          scroll_mid_path3_elem.updateDomAttr({d: scroll_mid_path3_elem_d(val.width)})\n        }\n        if (!prev || val.left !== prev.left || val.width !== prev.width) {\n          const left = val.left + val.width - scroll_selector_round_compensation\n          const width = val.total - left\n          scroll_right_elem.updateDomStyle({left, width})\n        }\n      } else {\n        // console.error('here')\n      }\n      return val\n    }\n  }, AtomType.force)\n\n  let _request: XMLHttpRequest\n  _atoms.w('data_url', (val: string) => {\n    if (!val.endsWith('/')) val += '/'\n    if (_request !== void 0) _request.abort()\n    _request = new XMLHttpRequest()\n    _request.onreadystatechange = function () {\n      if (_request.readyState === 4 ) {\n        let data = _request.status !== 200 ? null as any : JSON.parse(_request.responseText)\n        _request = void 0\n        if (data.columns.length < 2 || data.columns[0].length < 3) data = null\n        _atoms('data')(data)\n      }\n    }\n    _request.open('GET', val + 'overview.json', true)\n    _request.send(null)\n  })\n\n  _atoms.def('data')\n\n  _atoms.m('columns', ['data'], (v: any) => {\n    const val = v(0)\n    const columns = [] as any\n    // console.error('here')\n    // return void 0\n    // TODO: remove earlier tg2-chart-selector-point, tg2-chart-checkbox\n    if (!val) {\n      // TODO:\n    } else {\n      function findIdOfX(types: any) {\n        for (var id in types) if (types[id] === 'x') return id;\n        return null;\n      }\n      var idOfX = findIdOfX(val.types)\n      if (!idOfX) throw new Error('x axis not found in data')\n      // if (chart_mode == 4) {\n      //   console.log(val)\n      // } else\n      if (chart_mode == 3 || chart_mode == 4) {\n\n        let xColumn: any\n        for (let c = 0; c < val.columns.length; c++) {\n          let columnData = val.columns[c]\n          let id = columnData[0]\n          const color = val.colors[id]\n          const name = val.names[id]\n          let column = {\n            id,\n            name,\n            data: columnData,\n            color,\n            min: forceMinY !== undefined ? forceMinY : columnData[1],\n            max: columnData[1],\n          }\n          if (id === idOfX) {\n            column.min = columnData[1];\n            column.max = columnData[columnData.length - 1];\n            xColumn = column\n          } else {\n            columns.push(column);\n          }\n        }\n        setTimeout(() => {\n          _atoms('xColumn')(xColumn)\n        })\n        return columns\n      } else if (chart_mode == 2) {\n        let xColumn: any\n        for (let c = 0; c < val.columns.length; c++) {\n          let columnData = val.columns[c]\n          let id = columnData[0]\n          const color = val.colors[id]\n          const name = val.names[id]\n          let column = {\n            id,\n            name,\n            data: columnData,\n            color,\n            min: forceMinY !== undefined ? forceMinY : columnData[1],\n            max: columnData[1],\n            // total_max: 0,\n          }\n          if (id === idOfX) {\n            column.min = columnData[1];\n            column.max = columnData[columnData.length - 1];\n            xColumn = column\n          } else {\n            columns.push(column);\n          }\n        }\n\n        // let total_max = 0\n        // for (let i = 1; i < xColumn.data.length; i++) {\n        //   let total = 0\n        //   for (var c = 0; c < columns.length; c++) {\n        //     total += columns[c].data[i]\n        //   }\n        //   if (total_max < total) = total_max\n        // }\n        // xColumn.total_max = total_max\n\n        setTimeout(() => {\n          _atoms('xColumn')(xColumn)\n        })\n        return columns\n\n      } else {\n\n        // console.log(val)\n        const data = val\n        if (chart_mode == 1 && data.columns.length !== 3) throw new Error('chart_mode 1 expects exactly 2 data columns, found ' + (data.columns.length - 1))\n        for (var c = 0; c < data.columns.length; c++) {\n          let columnData = data.columns[c]\n          let id = columnData[0]\n          const color = data.colors[id]\n          const name = data.names[id]\n          let column = <{id: string, name: string, data: any, color: string, min: number, max: number}>{\n            id,\n            name,\n            data: columnData,\n            color,\n            // min: forceMinY !== undefined ? forceMinY : columnData[1],\n            // max: columnData[1],\n          }\n          if (id === idOfX) {\n            column.min = columnData[1];\n            column.max = columnData[columnData.length - 1];\n            _atoms('xColumn')(column)\n          } else {\n            for (var i = 2; i < columnData.length; i++) {\n              var value = columnData[i]\n              if (void 0 === column.min || column.min > value) column.min = value\n              if (void 0 === column.max || column.max < value) column.max = value\n            }\n            columns.push(column);\n          }\n        }\n        // console.log(columns)\n      }\n    }\n    // console.warn(chart_mode, columns)\n    return columns\n  }, {d: false})\n\n  _atoms.def('xColumn')\n  _atoms.m('intervalX', ['xColumn'], (v: any) => v(0).data[2] - v(0).data[1])\n  // _atoms.m('previewMinMaxX.min', ['xColumn'], (v: any) => v(0).min)\n  // _atoms.m('previewMaxX', ['xColumn'], (v: any) => v(0).max)\n  // _atoms.def('previewRange')\n  _atoms.m('previewMinMaxX', ['xColumn'], (v: any) => ({min: v(0).min, max: v(0).max}))\n  // _atoms.def('previewRangeX')\n  _atoms.m('previewRangeX', ['previewMinMaxX'], (v: any) => v(0).max - v(0).min)\n\n  _atoms.m('selector_points', ['columns'], (v: any) => {\n    const columns = v(0)\n    const selector_points = [] as Elem[]\n    for (var c = 0; c < columns.length; c++) {\n      selector_points.push(\n        createElem({\n          cls: 'tg2-chart-selector-point',\n          parent: grid_elem,\n          style: { borderColor: columns[c].color }\n        })\n      )\n    }\n    return selector_points\n  }, { t: AtomType.force })\n\n\n  _atoms.m('info_body', ['columns'], (v: any) => {\n    const columns = v(0)\n    const result = [] as Elem[]\n    for (var c = 0; c < columns.length; c++) {\n      const name = columns[c].name\n      const color = columns[c].color\n      const info_item = createElem({\n        cls: 'tg2-chart-info-item',\n        parent: info_body_elem,\n      })\n      result.push(info_item)\n      const item_percent = createElem({\n        cls: 'tg2-chart-info-item-percent',\n        parent: info_item,\n        // props: { innerText: name },\n        style: { display: chart_mode == 2 || chart_mode == 4 ? 'block' : 'none'},\n      })\n      const item_name = createElem({\n        cls: 'tg2-chart-info-item-name',\n        parent: info_item,\n        props: { innerText: name }\n      })\n      const item_count = createElem({\n        cls: 'tg2-chart-info-item-count',\n        parent: info_item,\n        style: { color }\n      })\n      info_items.push({info_item, item_count, item_name, item_percent})\n    }\n    return result\n  }, { t: AtomType.force })\n\n  _atoms.m('checkboxes', ['columns'], (v: any) => {\n    // const checkboxes = [] as Elem[]\n    const columns = v(0)\n    const checkboxes = [] as Elem[]\n    const checkbox_dom_nodes = [] as any[]\n    if (columns.length > 1) {\n      const checks = Array(columns.length) as boolean[]\n      const pressProcessed = Array(columns.length) as boolean[]\n      const pressTimer = Array(columns.length) as any[]\n      let lastTarget: any\n      for (var c = 0; c < columns.length; c++) {\n        checks[c] = true\n        const name = columns[c].name\n        const color = columns[c].color\n        // let pressProcessed = false\n        function updateCheckbox(c: number, checked: boolean) {\n          const checkbox = checkboxes[c]\n          if (!checked) {\n            checkbox.dom_node().removeAttribute('tg2-checked')\n            checkbox.updateDomStyle({\n              background: 'transparent',\n              color: columns[c].color,\n            })\n          } else {\n            checkbox.dom_node().setAttribute('tg2-checked', '')\n            checkbox.updateDomStyle({\n              background: columns[c].color,\n              color: 'white',\n            })\n          }\n        }\n        const mousedown_checkbox = (event: MouseEvent | TouchEvent) => {\n          // if (lastTarget) return\n          // console.log(lastTarget, {'': 'mousedown_checkbox'})\n          // console.log((event as TouchEvent).touches)\n          const target = ((event as TouchEvent).touches ? (event as TouchEvent).touches[0].target : event.currentTarget) as HTMLInputElement\n          lastTarget = target\n          const c = target.getAttribute('data-id');\n          pressProcessed[c] = false\n          pressTimer[c] = setTimeout(() => {\n            pressTimer[c] = void 0\n            pressProcessed[c] = true\n            const new_alpha = Array(columns.length) as number[]\n            let changed = false\n            for (let i = 0, count = columns.length; i < count; i++) {\n              if (i + '' != c) {\n                if (checks[i]) {\n                  checks[i] = false\n                  changed = true\n                  new_alpha[i] = 0\n                  updateCheckbox(i, checks[i])\n                }\n              } else {\n                if (!checks[i]) {\n                  checks[i] = true\n                  changed = true\n                  new_alpha[i] = 1\n                  updateCheckbox(i, checks[i])\n                }\n              }\n            }\n            for (let i = 0, count = columns.length; i < count; i++) {\n              if (new_alpha[i] == 1) {\n                play({\n                  name: 'alpha_grid',\n                  key: i,\n                  toValue: 1,\n                })\n              }\n            }\n            for (let i = 0, count = columns.length; i < count; i++) {\n              if (new_alpha[i] == 0) {\n                play({\n                  name: 'alpha_grid',\n                  key: i,\n                  toValue: 0,\n                })\n              }\n            }\n            if (changed) {\n              _atoms('mainMinMaxY').update()\n              _atoms('previewMinMaxY').update()\n            }\n          }, 500)\n        }\n        const mouseup_checkbox = (event: MouseEvent | TouchEvent) => {\n          // console.log((event as TouchEvent).touches)\n          const target = ((event as TouchEvent).touches ? lastTarget : event.currentTarget) as HTMLInputElement\n          // console.log(lastTarget, {'': 'mouseup_checkbox'})\n          lastTarget = void 0\n          const c = target.getAttribute('data-id');\n          // console.log(pressProcessed[c])\n          if (!pressProcessed[c]) {\n            // console.error('shortTap')\n            clearTimeout(pressTimer[c])\n            pressTimer[c] = void 0\n\n            const checked = !checks[c]\n\n            if (!checked) {\n              let checkedCount = 0\n              for (let i = 0; i < checks.length; i++) {\n                if (checks[i]) checkedCount++\n              }\n              if (checkedCount < 2) {\n                label.updateDomProps({className: 'tg2-chart-checkbox shake'})\n                setTimeout(() => label.updateDomProps({className: 'tg2-chart-checkbox'}), 900)\n                target.checked = true\n                return\n              }\n            }\n            checks[c] = checked\n\n            play({\n              name: 'alpha_grid',\n              key: c,\n              toValue: checked ? 1 : 0,\n            })\n            updateCheckbox(+c, checked)\n\n            _atoms('mainMinMaxY').update()\n            _atoms('previewMinMaxY').update()\n            _atoms('mainMinMaxY2').update()\n            _atoms('previewMinMaxY2').update()\n          }\n        }\n        const label = createElem({\n          elem: 'label',\n          attrs: {\n            'data-id': c,\n            'tg2-checked': true,\n          },\n          cls: 'tg2-chart-checkbox',\n          parent: check_box_bar_elem,\n          props: {innerText: name},\n          style: {\n            background: color,\n            color: 'white',\n            border: '1px solid ' + color,\n          },\n          events: {\n            mousedown: !('ontouchstart' in window) ? mousedown_checkbox : null,\n            mouseup: !('ontouchstart' in window) ? mouseup_checkbox : null,\n            touchstart: ('ontouchstart' in window) ? mousedown_checkbox : null,\n            touchend: ('ontouchstart' in window) ? mouseup_checkbox : null,\n          },\n        })\n        checkboxes.push(label)\n        checkbox_dom_nodes.push(label.dom_node())\n        // createElem({\n        //   elem: 'span',\n        //   cls: 'tg2-chart-checkbox-circle',\n        //   parent: label,\n        //   style: { borderColor: color}\n        // });\n        createElem({\n          parent: label,\n          elem: 'span',\n          cls: 'tg2-chart-checkbox-symbol',\n          style: { borderColor: color }\n        });\n      }\n    }\n    return checkboxes\n  }, { t: AtomType.force })\n\n  _atoms.m('alpha_grid', ['columns'], (v: any, val?: any) => {\n    const columns = v(0)\n    if (val === void 0) {\n      val = [] as number[]\n      for (var c = 0, count = columns.length; c < count; c++)\n        val.push(createAnimation(1, SCALE_DURATION))\n    }\n    return val\n  })\n\n  _atoms.m('alpha_scroll', ['columns'], (v: any, val?: any) => {\n    const columns = v(0)\n    if (val === void 0) {\n      val = [] as number[]\n      for (var c = 0, count = columns.length; c < count; c++)\n        val.push(createAnimation(1, SCALE_DURATION))\n    }\n    return val\n  })\n\n  const touchPrecision = 15\n\n  const scroll_selector_width = 10\n  const scroll_selector_round_compensation = 4\n  let _scroll_mid_width_min: number\n  function scroll_mid_width_min () {\n    if (_scroll_mid_width_min === void 0) _scroll_mid_width_min =\n       'ontouchstart' in window ?\n       (scroll_selector_width + touchPrecision) * 2 + touchPrecision :\n       scroll_selector_width * 4\n    return _scroll_mid_width_min\n  }\n  function scroll_mid_width_default() {\n    return Math.max(60, scroll_mid_width_min())\n  }\n\n  const header_height = 13\n  const grid_margin_top = 16\n  const scroll_margin_top = 10\n  const scroll_height = 40\n  const check_box_bar_margin_top = 14\n  const check_box_bar_min_height = 36\n  const grid_height_correction = header_height + grid_margin_top + check_box_bar_min_height + check_box_bar_margin_top + scroll_height + scroll_margin_top\n  const grid_min_height = 240 - grid_height_correction\n\n  const elem = createElem({cls: 'tg2-chart'})\n  const header_elem = createElem({cls: 'tg2-chart-header', parent: elem })\n  const title_elem = createElem({cls: 'tg2-chart-title', parent: header_elem })\n  const label_cont_elem = createElem({cls: 'tg2-chart-label-container', parent: header_elem })\n  const period_elem = createElem({cls: 'tg2-chart-period', parent: label_cont_elem })\n  const period_from_elem = createElem({cls: 'tg2-chart-period-from', parent: period_elem, props: { innerText: '1 April 2019'} })\n  const period_delim_elem = createElem({cls: 'tg2-chart-period-delim', parent: period_elem, props: { innerText: ' - '} })\n  const period_to_elem = createElem({cls: 'tg2-chart-period-to', parent: period_elem, props: { innerText: '30 April 2019'} })\n  const grid_elem = createElem({\n    cls: 'tg2-chart-grid',\n    parent: elem, style: {\n      marginTop: grid_margin_top + 'px',\n    },\n    events: {\n      mouseleave(event: MouseEvent) { select_i(null)  },\n      mouseenter(event: MouseEvent) { select_i(event.clientX) },\n      mousemove(event: MouseEvent) { select_i(event.clientX) },\n      touchstart(event: TouchEvent) { select_i(event.touches[0].clientX) },\n      touchmove(event: TouchEvent) { select_i(event.touches[0].clientX) },\n      touchend() { select_i(null) },\n      touchcancel() { select_i(null) },\n    },\n  })\n  const info_elem = createElem({cls: 'tg2-chart-info', parent: elem})\n  const info_header_elem = createElem({cls: 'tg2-chart-info-header', parent: info_elem})\n  const info_body_elem = createElem({cls: 'tg2-chart-info-body', parent: info_elem})\n  let _selected_i: number\n  // const selector_points = [] as Elem[]\n  const info_items = [] as any[]\n  let last_info_left: number\n  function select_i(clientX?: number) {\n    if (clientX !== void 0) {\n\n      const previewMinMaxX = _atoms('previewMinMaxX')()\n      const intervalX = _atoms('intervalX')()\n      const mainScaleX = _atoms('mainScaleX')()\n      const mainScaleY = _atoms('mainScaleY')()\n      const mainOffsetX = _atoms('mainOffsetX')()\n      const mainOffsetY = _atoms('mainOffsetY')()\n      const alpha_grid = _atoms('alpha_grid')()\n      const xColumn = _atoms('xColumn')()\n      const columns = _atoms('columns')()\n\n      if (clientX !== null) {\n\n        const was_selected = _selected_i !== null\n        const clientRect = grid_canvas_elem.dom_node().getBoundingClientRect()\n        let offsetLeft = clientX - clientRect.left\n        if (offsetLeft < _atoms('paddingHor')()) {\n          // console.log({offsetLeft, _atoms('paddingHor')()})\n          clientX = null\n        } else {\n          let x = ((clientX - clientRect.left) * pixelRatio - mainOffsetX) / mainScaleX\n          const selected_i = Math.round((x - previewMinMaxX.min) / intervalX) + 1\n          // console.log(xColumn)\n          if (selected_i >= xColumn.data.length) {\n          // console.log({selected_i}, xColumn.data.length)\n            clientX = null\n          } else if (selected_i != _selected_i) {\n            _selected_i = selected_i\n            const selected_x = xColumn.data[_selected_i]\n            const leftOffset = Math.round((selected_x * mainScaleX + mainOffsetX) / pixelRatio)\n            if (chart_mode != 2 && chart_mode != 3) {\n              vert_line_elem.updateDomStyle({\n                width: leftOffset + 'px',\n                opacity: 1,\n                transition: (!was_selected ? '' : 'opacity 0.1s, ') + (was_selected ? 'width 0.1s' : ''),\n              })\n            } else {\n              // console.log('here')\n              const width = _atoms('width')()\n              const theme = _atoms('theme')()\n              const mainHeight = _atoms('mainHeight')()\n              const leftWidth = Math.round(((selected_x - intervalX / 2) * mainScaleX + mainOffsetX) / pixelRatio) + 1\n              const rightOffset = Math.round(((selected_x + intervalX / 2) * mainScaleX + mainOffsetX) / pixelRatio)\n              const rightWidth = width - rightOffset\n              // console.log(mainHeight, pixelRatio)\n              vert_left_elem.updateDomStyle({\n                position: 'absolute',\n                height: (mainHeight / pixelRatio),\n                left: 0,\n                top: 0,\n                width: leftWidth,\n                background: theme == 'day' ? '#FFFFFF' : '#242F3E',\n                opacity: '0.5',\n                transition: (!was_selected ? '' : 'opacity 0.1s, ') + (was_selected ? 'width 0.1s' : ''),\n                // transition: (was_selected ? 'width 0.1s' : ''),\n              })\n              vert_right_elem.updateDomStyle({\n                position: 'absolute',\n                height: (mainHeight / pixelRatio),\n                right: 0,\n                top: 0,\n                width: rightWidth,\n                background: theme == 'day' ? '#FFFFFF' : '#242F3E',\n                opacity: '0.5',\n                transition: (!was_selected ? '' : 'opacity 0.1s, ') + (was_selected ? 'width 0.1s' : ''),\n                // transition: (was_selected ? 'width 0.1s' : ''),\n              })\n            }\n            const client_y_values = [] as number[]\n            // if (chart_mode <= 1) {\n\n              const selector_points = _atoms('selector_points')()\n              for (var c = 0; c < columns.length; c++) {\n                var yColumn = columns[c];\n                if (alpha_grid[c].toValue === 0) {\n                  info_items[c].info_item.updateDomStyle({display: 'none'})\n                } else {\n                  let client_y: number\n                  let y: number\n                  if (chart_mode == 0 || c == 0) {\n                    y = yColumn.data[_selected_i];\n                    client_y = Math.round((y * mainScaleY + mainOffsetY) / pixelRatio)\n                  } else {\n                    const mainScaleY = _atoms('mainScaleY2')()\n                    const mainOffsetY = _atoms('mainOffsetY2')()\n                    y = yColumn.data[_selected_i];\n                    client_y = Math.round((y * mainScaleY + mainOffsetY) / pixelRatio)\n                  }\n                  client_y_values.push(client_y)\n                  if (chart_mode == 1 || chart_mode == 0)\n                    selector_points[c].updateDomStyle({\n                      left: (leftOffset - 6) + 'px',\n                      top: (client_y - 6) + 'px',\n                      opacity: 1,\n                      transition: (!was_selected ? '' : 'opacity 0.1s, ') + (was_selected ? 'top 0.1s, left 0.1s' : ''),\n                    })\n                  // console.log({y})\n                  info_items[c].info_item.dom_node().style.display = 'flex'\n                  // info_items[c].info_item.updateDomStyle({display: 'flex'})\n                  info_items[c].item_count.updateDomProps({innerText: y + ''})\n                }\n              }\n\n            if (chart_mode == 2) {\n              const previewMinMaxY = _atoms('previewMinMaxY')()\n              for (var c = 0; c < columns.length; c++) {\n                // console.log(columns[c])\n                var yColumn = columns[c];\n                if (alpha_grid[c].toValue === 0) {\n                  // info_items[c].info_item.updateDomStyle({display: 'none'})\n                } else {\n                  let p : string | number = (yColumn.data[_selected_i] / previewMinMaxY.max * 100)\n                  p = p < 1 ? p.toPrecision(1) : Math.round(p)\n                  // console.log(p)\n                  info_items[c].item_percent.updateDomProps({innerText: p + '%'})\n                }\n              }\n            }\n            if (chart_mode == 4) {\n              let total = 0\n              for (var c = 0; c < columns.length; c++) {\n                // console.log(columns[c])\n                var yColumn = columns[c];\n                if (alpha_grid[c].toValue === 0) {\n                  // info_items[c].info_item.updateDomStyle({display: 'none'})\n                } else {\n                  total += yColumn.data[_selected_i];\n                }\n              }\n              for (var c = 0; c < columns.length; c++) {\n                // console.log(columns[c])\n                var yColumn = columns[c];\n                if (alpha_grid[c].toValue === 0) {\n                  // info_items[c].info_item.updateDomStyle({display: 'none'})\n                } else {\n                  let p : string | number = (yColumn.data[_selected_i] / total * 100)\n                  p = p < 1 ? p.toPrecision(1) : Math.round(p)\n                  info_items[c].item_percent.updateDomProps({innerText: p + '%'})\n                }\n              }\n            }\n\n            {\n              const infoClientRect = info_elem.dom_node().getBoundingClientRect()\n              const infoWidth = (infoClientRect.right - infoClientRect.left)\n              let left = Math.max(0, Math.min(_atoms('width')() - infoWidth, leftOffset - (infoWidth / 2)))\n              let needAdjustLeft = false\n              const avail_lefts = [] as number[]\n              if (chart_mode <= 1 ) {\n                if (!client_y_values.length) {\n                  avail_lefts.push(left)\n                } else {\n                  const max_client_y = Math.max(...client_y_values)\n                  const gridClientRect = grid_elem.dom_node().getBoundingClientRect()\n                  if (max_client_y - 6 - gridClientRect.top >= infoClientRect.height - 5) {\n                    avail_lefts.push(left)\n                  }\n                }\n              }\n              let margin = chart_mode <= 1 ? 6 : 26\n              // console.log({leftOffset, margin, infoWidth}, _atoms('width')())\n              if (leftOffset + margin <= _atoms('width')() - infoWidth) {\n                avail_lefts.push(leftOffset + margin)\n              }\n              // console.log(avail_lefts)\n              if (leftOffset - infoWidth - margin >= 0) {\n                avail_lefts.push(leftOffset - infoWidth - margin)\n              }\n              if (last_info_left == null || avail_lefts.length == 1) {\n                left = avail_lefts[0]\n              } else {\n                let dist_min: number\n                let i_min: number\n                for (let i = 0; i < avail_lefts.length; i++) {\n                  if (i_min === void 0) {\n                    i_min = i\n                    dist_min = Math.abs(last_info_left - avail_lefts[i])\n                  } else {\n                    const dist = Math.abs(last_info_left - avail_lefts[i])\n                    if (dist < dist_min) {\n                      i_min = i\n                      dist_min = dist\n                    }\n                  }\n                }\n                left = avail_lefts[i_min]\n                // console.log(left, avail_lefts)\n              }\n              last_info_left = left\n\n              info_elem.updateDomStyle({\n                left: left + 'px',\n                opacity: 1,\n                transition: (!was_selected ? '' : 'opacity 0.1s, ') + (was_selected ? 'top 0.1s, left 0.1s' : ''),\n              })\n              {\n                let innerText: string\n                var date = new Date(selected_x);\n                innerText = DAY_NAMES[date.getDay()] + ', ' + date.getDate() + ' ' + MONTH_NAMES[date.getMonth()] + ' ' + date.getFullYear()\n                info_header_elem.updateDomProps({innerText})\n              }\n            }\n          }\n        }\n      }\n      // console.log(clientX)\n\n      if (clientX === null) {\n        // console.log(clientX)\n        _selected_i = null\n        last_info_left = null\n        const hide = {\n          opacity: 0,\n          transition: 'opacity 0.5s',\n        }\n        vert_line_elem.updateDomStyle(hide)\n        if (chart_mode == 0 || chart_mode == 1) {\n          const selector_points = _atoms('selector_points')()\n          for (var c = 0; c < columns.length; c++) {\n            selector_points[c].updateDomStyle(hide)\n          }\n        } else if (chart_mode == 2 || chart_mode == 3) {\n          vert_left_elem.updateDomStyle({opacity: 0})\n          vert_right_elem.updateDomStyle({opacity: 0})\n        }\n        info_elem.updateDomStyle(hide)\n      }\n    }\n    return _selected_i\n  }\n\n  const grid_canvas_elem = createElem({\n    elem: 'canvas',\n    cls: 'tg2-chart-grid-canvas',\n    parent: grid_elem,\n    style: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      width: '100%',\n      height: '100%',\n    },\n  })\n  const grid_canvas_context = (grid_canvas_elem.dom_node() as any).getContext('2d')\n\n  const vert_line_elem = createElem({cls: 'tg2-chart-vert-line', parent: grid_elem})\n  const vert_left_elem = createElem({cls: 'tg2-chart-vert-left', parent: grid_elem, style: {opacity: 0}})\n  const vert_right_elem = createElem({cls: 'tg2-chart-vert-right', parent: grid_elem, style: {opacity: 0}})\n\n\n  const xLineStyle = {\n    'day': {\n      0: { color: '#182D3B', opacity: .1 },\n      1: { color: '#182D3B', opacity: .1 },\n      2: { color: '#182D3B', opacity: .1 },\n\n      3: { color: '#252529', opacity: .5 },\n      4: { color: '#252529', opacity: .5 },\n    },\n    'night': {\n      0: { color: '#FFFFFF', opacity: .1 },\n      1: { color: '#FFFFFF', opacity: .1 },\n      2: { color: '#FFFFFF', opacity: .1 },\n      3: { color: '#FFFFFF', opacity: .1 },\n      4: { color: '#FFFFFF', opacity: .1 },\n    },\n  }\n\n  function hexToRgbA(hex: string, opacity: number){\n      var c;\n      if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n          c= hex.substring(1).split('');\n          if(c.length== 3){\n              c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n          }\n          c= +('0x'+c.join(''));\n          return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n      }\n      throw new Error('Bad Hex');\n  }\n\n  _atoms.w('theme', (val: string) => {\n    vert_line_elem.updateDomStyle({\n      borderRight: '1px solid ' + hexToRgbA(xLineStyle[val][chart_mode].color, xLineStyle[val][chart_mode].opacity)\n    })\n    scroll_mid_path_elem.updateDomStyle({color: {day: '#C0D1E1', night: '56626D'}[val]})\n\n    return val\n  })\n\n  const scroll_elem = createElem({cls: 'tg2-chart-scroll', parent: elem })\n  const scroll_canvas_elem = createElem({\n    elem: 'canvas',\n    cls: 'tg2-chart-scroll-canvas',\n    parent: scroll_elem,\n    style: {\n      position: 'absolute',\n      top: '0px',\n      left: '0px',\n      width: '100%',\n      height: '100%',\n    },\n  })\n  const scroll_canvas_context = (scroll_canvas_elem.dom_node() as any).getContext('2d')\n  const scroll_left_elem = createElem({cls: 'tg2-chart-scroll-left', parent: scroll_elem })\n  const scroll_right_elem = createElem({cls: 'tg2-chart-scroll-right', parent: scroll_elem })\n\n  function scroll_mid_elem_viewBox(width: number) {\n    return '0 0 ' + (width * 3) + ' 126'\n  }\n  function scroll_mid_path_elem_d(width: number) {\n    const innerWidth = (width - 20) * 3\n    const result = '' +\n      'M30 3' +\n        'l' + innerWidth + ' 0' +\n        'l0 120' +\n        'l-' + innerWidth + ' 0' +\n        'z' +\n\n      'M16 0a16 16 0 0 0 -16 16' +\n      'l0 94 a16 16 0 0 0 16 16' +\n      'l' + (innerWidth + 28) + ' 0 a16 16 90 0 0 16 -16 l0 -94a16 16 90 0 0 -16 -16z' +\n      // 'M' + (width * 3 - 18) + ' 51a3 3 180 0 1 6 0l0 24 a3 3 180 0 1 -6 0z' +\n      // 'M12 51 a3 3 180 0 1 6 0l0 24 a3 3 180 0 1 -6 0z' +\n    ''\n     return result\n  }\n\n  const scroll_mid_elem = createElem({\n    ns: 'http://www.w3.org/2000/svg',\n    elem: 'svg',\n    cls: 'tg2-chart-scroll-mid',\n    parent: scroll_elem,\n    attrs: {\n      viewBox: scroll_mid_elem_viewBox(60),\n      preserveAspectRatio: 'xMidYMid',\n    },\n    style: {\n      height: (scroll_height + 3) + 'px',\n      top: '-1.6px',\n    },\n  })\n\n  const scroll_mid_path_elem = createElem({\n    ns: 'http://www.w3.org/2000/svg',\n    elem: 'path',\n    parent: scroll_mid_elem,\n    attrs: {\n      d: scroll_mid_path_elem_d(60),\n    },\n    // style: {\n    //   fill: 'currentColor',\n    // },\n  })\n\n  const scroll_mid_path2_elem = createElem({\n    ns: 'http://www.w3.org/2000/svg',\n    elem: 'path',\n    parent: scroll_mid_elem,\n    attrs: {\n      fill: 'white',\n      d: 'M12 51a3 3 180 0 1 6 0l0 24 a3 3 180 0 1 -6 0z'\n    },\n  })\n  const scroll_mid_path3_elem = createElem({\n    ns: 'http://www.w3.org/2000/svg',\n    elem: 'path',\n    parent: scroll_mid_elem,\n    attrs: {\n      fill: 'white',\n      d: scroll_mid_path3_elem_d(60),\n    },\n  })\n  function scroll_mid_path3_elem_d(width: number) {\n    return 'M' + (width * 3 - 18) + ' 51a3 3 180 0 1 6 0l0 24 a3 3 180 0 1 -6 0z'\n    // return 'M' + (width * 3 - 18) + ' 51a3 3 180 0 1 6 0l0 24 a3 3 180 0 1 -6 0z'\n  }\n\n  const check_box_bar_elem = createElem({cls: 'tg2-chart-check-box-bar', parent: elem })\n\n  scroll_elem.updateDomStyle({\n    height: scroll_height + 'px',\n    marginTop: scroll_margin_top + 'px',\n  })\n\n  let forceMinY = 0\n  var mainHeight: number\n\n  var textCountX = 6;\n  var textCountY = 6;\n\n  const SCALE_DURATION = 400\n  var TEXT_X_FADE_DURATION = 200;\n\n  // let columns = [] as any[]\n  // let xColumn : any\n\n  const pixelRatio = window.devicePixelRatio;\n\n  var previewLineWidth = 1 * pixelRatio;\n  const lineWidth = 1 * pixelRatio;\n  var mainLineWidth = 2 * pixelRatio;\n  var font = (10 * pixelRatio) + 'px TgRoboto';\n  var textYMargin = -6 * pixelRatio;\n  var textXMargin = 20 * pixelRatio;\n  // var textXWidth = 30 * pixelRatio;\n  var textYHeight = 45 * pixelRatio;\n\n\n  var MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var DAY_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  function formatDate(time: number, short = false) {\n      var date = new Date(time);\n      var s = MONTH_NAMES[date.getMonth()] + ' ' + date.getDate();\n      if (short) return s;\n      return DAY_NAMES[date.getDay()] + ', ' + s;\n  }\n\n  function createAnimation(value: any, duration: number, easing?: EasingFunc) {\n    return {\n      fromValue: value,\n      toValue: value,\n      value: value,\n      startTime: 0,\n      duration: duration,\n      delay: 0,\n      easing: easing || Easing.easeOutQuad,\n    }\n  }\n\n  const LIGHT_COLORS = {\n    circleFill: '#ffffff',\n    line: '#f2f4f5',\n    zeroLine: '#ecf0f3',\n    selectLine: '#dfe6eb',\n    text: '#96a2aa',\n    preview: '#eef2f5',\n    previewAlpha: 0.8,\n    previewBorder: '#b6cfe1',\n    previewBorderAlpha: 0.5\n  }\n  let _colors = LIGHT_COLORS\n\n\n  const _anim_to_play = {} as { [anim_name: string]: {\n    atom_name: string,\n    value_key: any,\n  } }\n  function play(p: {\n    name: string,\n    key?: any,\n    fromValue?: any,\n    toValue: any,\n  }) {\n    // console.log(p)\n    const atom_name = p.name\n    const value_key = p.key\n    const anim_name = atom_name + (value_key === void 0 ? '' : '_' + value_key)\n    const atom = _atoms(atom_name)\n    let value = atom.value()\n    const anim = value_key === void 0 ? { ...value } : { ...value[value_key]}\n    if (_anim_to_play[anim_name]) {\n      // _anim_to_play[anim_name].toValue = p.toValue\n      anim.toValue = p.toValue\n      if (value_key === void 0) {\n        atom.value(anim)\n      } else {\n        const new_value = Array.isArray(value) ? [...value] : {...value}\n        new_value[value_key] = anim\n        atom.value(new_value)\n      }\n      return\n    }\n    // if (p.name == 'previewRangeY') console.log(p, {...anim})\n    anim.startTime = void 0\n    anim.toValue = p.toValue\n    if (p.fromValue !== void 0) {\n      anim.value = p.fromValue\n    }\n    if (anim.value !== void 0) {\n      anim.fromValue = anim.value\n    } else {\n      anim.fromValue = anim.value = p.toValue\n    }\n    if (value_key === void 0) {\n      atom.value(anim)\n    } else {\n      const new_value = Array.isArray(value) ? [...value] : {...value}\n      new_value[value_key] = anim\n      atom.value(new_value)\n    }\n\n    if (anim.toValue != anim.fromValue) {\n      _anim_to_play[anim_name] = {atom_name, value_key}\n      playAnimation()\n    }\n  }\n  function updateAnimation(anim_name: string, t: number) {\n    const {atom_name, value_key} = _anim_to_play[anim_name]\n\n    const atom = _atoms(atom_name)\n    let value = atom.value()\n    const anim = value_key === void 0 ? { ...value } : { ...value[value_key]}\n    if (anim.value === anim.toValue) return false;\n\n    if (anim.value == null || isNaN(anim.value)) {\n      console.error({anim_name}, anim.value)\n      anim.value = anim.toValue\n    } else {\n      if (anim.startTime === void 0) {\n        // console.log({anim_name, t})\n        anim.startTime = t\n      }\n      var progress = Math.max(0, Math.min(1, ((t - anim.startTime) - anim.delay) / anim.duration))\n      // var ease = easing\n      // -progress * (progress - 2);\n      // console.log(anim_name)\n      anim.value = anim.fromValue + (anim.toValue - anim.fromValue) * anim.easing(progress);\n    }\n    if (value_key === void 0) {\n      atom.value(anim)\n    } else {\n      const new_value = Array.isArray(value) ? [...value] : {...value}\n      new_value[value_key] = anim\n      atom.value(new_value)\n    }\n    // console.log({anim_name}, anim)\n    return true;\n  }\n\n  let playAnimationRaf: number\n  function playAnimation() {\n    if (playAnimationRaf === void 0) playAnimationRaf = requestAnimationFrame(function(t: number) {\n      playAnimationRaf = void 0\n      const anim_names = Object.keys(_anim_to_play)\n      let needReplay = false\n      for (let i = 0, count = anim_names.length; i < count; i++) {\n        const anim_name = anim_names[i]\n        if (updateAnimation(anim_name, t)) {\n          needReplay = true\n        } else {\n          delete _anim_to_play[anim_name]\n        }\n      }\n      if (needReplay) playAnimation()\n    })\n  }\n\n  _atoms.def('scroll_height', (val?: number) => val || scroll_height)\n  // _atoms.def('previewMinY')\n  // _atoms.def('previewMaxY')\n  _atoms.def('previewMarginTop', (val?: number) => val || 25 * pixelRatio)\n\n  _atoms.def('scroll_canvas_width', {\n    masters: ['scroll_width'],\n    value(p: MasterProvider) {\n      const v = p.values()\n      return !v ? void 0 : pixelRatio * v.get('scroll_width')\n    },\n  })\n\n  _atoms.def('scroll_canvas_height', {\n    masters: ['scroll_height'],\n    value(p: MasterProvider) {\n      const v = p.values()\n      if (v) return pixelRatio * v.get('scroll_height')\n    },\n  })\n\n  _atoms.def('scroll_canvas_context', {\n    masters: ['scroll_canvas_width', 'scroll_canvas_height'],\n    value(p: MasterProvider, val?: any) {\n      const v = p.values()\n      val = void 0\n      if (v) {\n        const width = v.get('scroll_canvas_width')\n        const height = v.get('scroll_canvas_height')\n        scroll_canvas_elem.updateDomAttr({width, height}, true)\n        val = (scroll_canvas_elem.dom_node() as any).getContext('2d')\n      }\n      return val\n    },\n  })\n\n  _atoms.def('grid_canvas_width', {\n    masters: ['width'],\n    value(p: MasterProvider) {\n      const v = p.values()\n      return !v ? void 0 : pixelRatio * v.get('width')\n    },\n  })\n\n  _atoms.def('grid_canvas_height', {\n    masters: ['grid_height'],\n    value(p: MasterProvider) {\n      const v = p.values()\n      if (v) return pixelRatio * v.get('grid_height')\n    },\n  })\n\n  _atoms.def('grid_canvas_context', {\n    masters: ['grid_canvas_width', 'grid_canvas_height'],\n    value(p: MasterProvider, val?: any) {\n      const v = p.values()\n      val = void 0\n      // if (!v) {\n      //   const atoms = p.atoms()\n      //   Object.keys(atoms).forEach(key => {\n      //     console.warn(key + ': ' + atoms[key].state(), atoms[key].value())\n      //   })\n      // }\n      if (v) {\n        const width = v.get('grid_canvas_width')\n        const height = v.get('grid_canvas_height')\n        grid_canvas_elem.updateDomAttr({width, height}, true)\n        val = (grid_canvas_elem.dom_node() as any).getContext('2d')\n        // console.log(val)\n      }\n      return val\n    },\n  })\n\n  _atoms.m('previewScaleX', ['scroll_width', 'previewRangeX'], (v: any) =>\n    v('scroll_width') * pixelRatio / v('previewRangeX')\n  )\n\n  _atoms.m('previewOffsetX', ['previewMinMaxX', 'previewScaleX'], (v: any) =>\n    -v('previewMinMaxX').min * v('previewScaleX')\n  )\n\n  _atoms.m('previewMinMaxY', ['xColumn', 'columns'], (v: any) => {\n    const xColumn = v('xColumn')\n    const columns = v('columns')\n    const alpha = _atoms('alpha_grid')()\n\n    let previewMinY = forceMinY !== undefined ? forceMinY : Number.MAX_VALUE;\n    let previewMaxY = Number.MIN_VALUE;\n    // const result = <{min: number, max:number}>{}\n\n    if (chart_mode == 0) {\n      const result = <{min: number, max: number}>{}\n\n      for (var c = 0; c < columns.length; c++) {\n        if (alpha[c].toValue !== 0) {\n          var column = columns[c];\n          if (void 0 === result.min || result.min > column.min ) result.min = column.min\n          if (void 0 === result.max || result.max < column.max ) result.max = column.max\n        }\n      }\n\n      play({name: 'previewMinY', toValue: result.min})\n      play({name: 'previewMaxY', toValue: result.max})\n\n      return result\n    } else if (chart_mode == 1) {\n      const result = <{min: number, max: number}>{}\n\n      let c = 0\n      if (alpha[c].toValue !== 0) {\n        var column = columns[c];\n        if (void 0 === result.min || result.min > column.min ) result.min = column.min\n        if (void 0 === result.max || result.max < column.max ) result.max = column.max\n        play({name: 'previewMinY', toValue: result.min})\n        play({name: 'previewMaxY', toValue: result.max})\n      }\n\n      return result\n\n    } else if (chart_mode == 2 || chart_mode == 3) {\n      let total_max: number\n      const totals = [] as number[]\n      for (let i = 1, count_i = xColumn.data.length; i < count_i; i++) {\n        let total = 0\n        for (let c = 0, count_c = columns.length; c < count_c; c++) {\n          if (alpha[c].toValue !== 0) {\n            total += columns[c].data[i]\n          }\n        }\n        totals[i] = total\n        if (void 0 === total_max || total_max < total) total_max = total\n      }\n\n      play({name: 'previewMinY', fromValue: 0, toValue: 0})\n      play({name: 'previewMaxY', toValue: total_max})\n\n      return {min: 0, max: total_max}\n\n    } else if (chart_mode == 4) {\n      const total_max = 100\n      play({name: 'previewMinY', fromValue: 0, toValue: 0})\n      play({name: 'previewMaxY', toValue: total_max})\n\n      play({name: 'mainMinY', fromValue: 0, toValue: 0})\n      play({name: 'mainMaxY', toValue: total_max})\n      return {min: 0, max: total_max}\n    }\n\n    return {min: previewMinY, max: previewMaxY}\n  }, {t: AtomType.force})\n\n  _atoms.r('previewMinY', () => createAnimation(void 0, SCALE_DURATION))\n  _atoms.r('previewMaxY', () => createAnimation(void 0, SCALE_DURATION))\n\n  _atoms.r('previewMinY2', () => createAnimation(void 0, SCALE_DURATION))\n  _atoms.r('previewMaxY2', () => createAnimation(void 0, SCALE_DURATION))\n\n  _atoms.m('previewScaleY', ['scroll_height', 'previewMinY', 'previewMaxY'], (v: any) => {\n    const minY = v('previewMinY')\n    const maxY = v('previewMaxY')\n    const mainHeight = v('scroll_height') * pixelRatio\n    const result = Number.isFinite(minY.value) && Number.isFinite(maxY.value) ?\n      -mainHeight / (maxY.value - minY.value) :\n      1\n    return result\n  }, {d: false})\n\n  _atoms.m('previewOffsetY', ['scroll_height', 'previewMinY', 'previewScaleY'], (v: any) => {\n    const mainMinY = v('previewMinY')\n    const mainHeight = v('scroll_height') * pixelRatio\n    const mainScaleY = v('previewScaleY')\n    const result =\n      Number.isFinite(mainMinY.value) ?\n      mainHeight - mainMinY.value * mainScaleY :\n      0\n    return result\n  }, {d: false})\n\n  _atoms.m('previewMinMaxY2', ['columns' ], (v: any) => {\n    const columns = v('columns')\n    const alpha = _atoms('alpha_grid')()\n\n    const result = <{min: number, max: number}>{}\n\n    if (chart_mode == 1) {\n\n      let c = 1\n      if (alpha[c].toValue !== 0) {\n        var column = columns[c];\n        if (void 0 === result.min || result.min > column.min ) result.min = column.min\n        if (void 0 === result.max || result.max < column.max ) result.max = column.max\n        play({name: 'previewMinY2', toValue: result.min})\n        play({name: 'previewMaxY2', toValue: result.max})\n      }\n    }\n\n    return result\n  }, {t: AtomType.force})\n\n  _atoms.m('previewScaleY2', ['scroll_height', 'previewMinY2', 'previewMaxY2'], (v: any) => {\n    const mainMinY = v('previewMinY2')\n    const mainMaxY = v('previewMaxY2')\n    const mainHeight = v('scroll_height') * pixelRatio\n    const result =\n      Number.isFinite(mainMinY.value) && Number.isFinite(mainMaxY.value) ?\n      -mainHeight / (mainMaxY.value - mainMinY.value) :\n      1\n    return result\n  }, {d: false})\n\n  _atoms.m('previewOffsetY2', ['scroll_height', 'previewMinY2', 'previewScaleY2'], (v: any) => {\n    const mainMinY = v('previewMinY2')\n    const mainHeight = v('scroll_height') * pixelRatio\n    const mainScaleY = v('previewScaleY2')\n    const result =\n      Number.isFinite(mainMinY.value) ?\n      mainHeight - mainMinY.value * mainScaleY :\n      0\n    return result\n  }, {d: false})\n  // _atoms.m('previewOffsetY2', ['scroll_height', 'previewMinMaxY2', 'previewScaleY2'], (v: any) =>\n  //   v(0) - v(1).min * v(2)\n  // )\n\n  _atoms.m('mainMinMaxX', ['scroll_mid', 'previewOffsetX', 'previewScaleX' ], (v: any) => {\n    const scroll_mid = v('scroll_mid')\n    const previewOffsetX = v('previewOffsetX')\n    const previewScaleX = v('previewScaleX')\n    function screenToPreviewX(screenX: number) {\n      return (screenX - previewOffsetX) / previewScaleX;\n    }\n    const result = {\n      min: screenToPreviewX(scroll_mid.left * pixelRatio),\n      max: screenToPreviewX((scroll_mid.left + scroll_mid.width) * pixelRatio),\n    }\n    _atoms('mainRangeX')(result.max - result.min)\n    // console.log(result.min)\n    // console.log(result.max)\n    // console.log({mainMinMaxX: result})\n    return result\n  }, {d: true})\n\n  _atoms.def('mainRangeX')\n\n  // _atoms.w('', ['mainMinMaxX'], (val: any) => {\n  //   // const result = v(0).max - v(0).min\n  //   // console.log({mainRangeX: result})\n  //   // return result\n\n  // })\n\n  _atoms.r('textXWidth', () => 30 * pixelRatio)\n\n  _atoms.m('textCountX', ['width', 'textXWidth'], (v: any) =>\n    Math.max(1, Math.floor(v(0) * pixelRatio / v(1) / 2))\n  )\n\n  // _atoms.r('mainRangeY', () => createAnimation(void 0, SCALE_DURATION))\n  _atoms.r('mainMinY', () => createAnimation(void 0, SCALE_DURATION, Easing.easeOutQuad))\n  _atoms.r('mainMaxY', () => createAnimation(void 0, SCALE_DURATION, Easing.easeOutQuad))\n  _atoms.r('mainMinY2', () => createAnimation(void 0, SCALE_DURATION, Easing.easeOutQuad))\n  _atoms.r('mainMaxY2', () => createAnimation(void 0, SCALE_DURATION, Easing.easeOutQuad))\n\n  _atoms.r('oldTextX_delta', () => 1)\n  _atoms.r('oldTextX_alpha', () => createAnimation(0, TEXT_X_FADE_DURATION, Easing.easeInQuad))\n\n  _atoms.r('newTextX_delta', () => 1)\n  _atoms.r('newTextX_alpha', () => createAnimation(0, TEXT_X_FADE_DURATION, Easing.easeInQuad))\n\n  _atoms.r('oldTextY_delta', () => 1)\n  _atoms.r('oldTextY_alpha', () => createAnimation(0, SCALE_DURATION))\n  _atoms.r('newTextY_delta', () => 1)\n  _atoms.r('newTextY_alpha', () => createAnimation(0, SCALE_DURATION))\n\n  _atoms.r('oldTextY2_delta', () => 1)\n  _atoms.r('oldTextY2_alpha', () => createAnimation(0, SCALE_DURATION))\n  _atoms.r('newTextY2_delta', () => 1)\n  _atoms.r('newTextY2_alpha', () => createAnimation(0, SCALE_DURATION))\n\n  _atoms.m('xTextAdjuster', [\n      'mainRangeX',\n      'intervalX',\n      'textCountX',\n      // 'newTextX_delta',\n      // 'oldTextX_delta',\n    ],\n    (v: any) => {\n      const mainRangeX = v.get('mainRangeX')\n      const intervalX = v.get('intervalX')\n      const textCountX = v.get('textCountX')\n      // const newTextX_delta = v()\n\n      var delta = mainRangeX / intervalX / textCountX\n      // console.log({delta, textCountX}, mainRangeX / intervalX )\n\n      var pow = 1;\n      // console.log({before: delta, textCountX})\n      while (pow <= delta) pow *= 2;\n      const newTextX_delta = _atoms('newTextX_delta')()\n      // console.error({delta, pow, newTextX_delta})\n      delta = pow\n\n        // console.log({delta, pow, textCountX}, mainRangeX / intervalX, newTextX_delta)\n      // console.log({after: delta, newTextX_delta})\n      if (delta < newTextX_delta) { // add dates\n        // console.error({delta, newTextX_delta})\n        _atoms('oldTextX_delta')(_atoms('newTextX_delta')())\n        play({name: 'oldTextX_alpha', fromValue: 1, toValue: 1});\n\n        _atoms('newTextX_delta')(delta)\n        play({name: 'newTextX_alpha', toValue: 1, fromValue: 0});\n        // console.log(delta, _atoms('newTextX_delta')())\n      } else if (delta > newTextX_delta) {  // remove dates\n        // console.warn({delta, newTextX_delta})\n        _atoms('oldTextX_delta')(newTextX_delta)\n        play({\n          name: 'oldTextX_alpha',\n          toValue: 0,\n          fromValue: _atoms('newTextX_alpha')().value,\n        });\n\n        _atoms('newTextX_delta')(delta)\n        // console.log('here')\n        // TODO: play({name: 'newTextX_alpha', toValue: 1, fromValue: 0});\n        play({name: 'newTextX_alpha', toValue: 1, fromValue: 1});\n          // console.log(_atoms('newTextX_alpha')())\n      }\n      return true\n    },\n    { t: AtomType.force })\n\n  _atoms.m('mainScaleX', ['width', 'paddingHor', 'mainRangeX', 'intervalX' ], (v: any) => {\n    const width = v.get('width')\n    const paddingHor = v.get('paddingHor')\n    const mainRangeX = v.get('mainRangeX')\n    const intervalX = v.get('intervalX')\n    const result = (chart_mode == 2 || chart_mode == 3) ?\n      (width - paddingHor * 2) * pixelRatio / (mainRangeX + intervalX)\n    : (width - paddingHor * 2) * pixelRatio / mainRangeX;\n    // console.log({mainScaleX: result})\n    return result\n  }, {d: true})\n\n  _atoms.m('mainOffsetX', ['mainMinMaxX', 'paddingHor', 'mainScaleX', 'intervalX' ], (v: any) => {\n    const mainMinMaxX = v.get('mainMinMaxX')\n    const paddingHor = v.get('paddingHor')\n    const mainScaleX = v.get('mainScaleX')\n    const intervalX = v.get('intervalX')\n    let result: number\n    if (chart_mode == 2 || chart_mode == 3) {\n      result = -(mainMinMaxX.min - intervalX / 2) * mainScaleX + paddingHor * pixelRatio\n    } else {\n      result = -mainMinMaxX.min * mainScaleX + paddingHor * pixelRatio\n    }\n    return result\n  })\n\n\n  _atoms.m('mainMinMaxI', [\n      'mainMinMaxX',\n      'paddingHor',\n      'mainScaleX',\n      'intervalX',\n      'previewMinMaxX',\n      'xColumn',\n    ],\n    (v: any) => {\n      const mainMinMaxX = v('mainMinMaxX')\n      const previewMinMaxX = v('previewMinMaxX')\n      const paddingHor = v('paddingHor')\n      const mainScaleX = v('mainScaleX')\n      const intervalX = v('intervalX')\n      const xColumn = v('xColumn')\n\n      const result = {\n        min: Math.max(1, Math.floor((mainMinMaxX.min - previewMinMaxX.min - paddingHor / mainScaleX) / intervalX) + 1),\n        max: Math.min(xColumn.data.length, Math.ceil((mainMinMaxX.max - previewMinMaxX.min + paddingHor / mainScaleX) / intervalX) + 2)\n      }\n      // console.log(result)\n\n      function formatDate(time: number) {\n          var date = new Date(time);\n          var MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n          var s = date.getDate() + ' ' + MONTH_NAMES[date.getMonth()] + ' ' + date.getFullYear();\n          return s\n          // if (short) return s;\n          // return DAY_NAMES[date.getDay()] + ', ' + s;\n      }\n      // console.log(formatDate(xColumn.data[result.min]))\n      // console.log(formatDate(xColumn.data[result.max - 1]))\n      // console.log({mainMinMaxI: result})\n\n      return result\n    },\n    {d: true}\n  )\n  _atoms.m('period', ['width', 'paddingHor', 'mainOffsetX', 'mainScaleX', 'intervalX'], (v: any) => {\n    const width = v('width')\n    const paddingHor = v('paddingHor')\n    const mainOffsetX = v('mainOffsetX')\n    const mainScaleX = v('mainScaleX')\n    const intervalX = v('intervalX')\n    function formatDate(time: number) {\n      var date = new Date(time);\n      var MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      var s = date.getDate() + ' ' + MONTH_NAMES[date.getMonth()] + ' ' + date.getFullYear();\n      return s\n        // if (short) return s;\n        // return DAY_NAMES[date.getDay()] + ', ' + s;\n    }\n    const toDate = formatDate(Math.floor((((width - paddingHor) * pixelRatio - mainOffsetX) / mainScaleX) / intervalX) * intervalX)\n    const fromDate = formatDate(Math.ceil((((paddingHor) * pixelRatio - mainOffsetX) / mainScaleX) / intervalX) * intervalX)\n    period_from_elem.updateDomProps({innerText: fromDate})\n    period_to_elem.updateDomProps({innerText: toDate})\n  }, { t: AtomType.force })\n\n  _atoms.m('mainHeight', ['grid_height', 'previewMarginTop'], (v: any) =>\n    v(0) * pixelRatio - v(1)\n  )\n\n  _atoms.m('mainMinMaxY', ['xColumn', 'columns', 'mainMinMaxI', 'previewMinMaxY'], (v: any) => {\n    const xColumn = v.get('xColumn')\n    const columns = v.get('columns')\n    const mainMinMaxI = v.get('mainMinMaxI')\n    const previewMinMaxY = v('previewMinMaxY')\n    const alpha_grid = _atoms('alpha_grid')() //v.get('alpha_grid')\n\n    const result = {\n      min: forceMinY !== undefined ? forceMinY : Number.MAX_VALUE,\n      max: Number.MIN_VALUE,\n    }\n\n    // let range: number\n    if (chart_mode == 2) {\n\n      let total_max = 0\n      // for (let i = 1; i < xColumn.data.length; i++) {\n      for (var i = mainMinMaxI.min; i < mainMinMaxI.max; i++) {\n        let total = 0\n        for (var c = 0; c < columns.length; c++) {\n          if (alpha_grid[c].toValue == 1) {\n            total += columns[c].data[i]\n          }\n        }\n        if (total_max < total) total_max = total\n      }\n      const result = {min: 0, max: Math.round(total_max / previewMinMaxY.max * 100)}\n      // console.log(result)\n\n      // xColumn.prevMainScaleY = _atoms('mainScaleY')() as number\n      play({name: 'mainMinY', toValue: result.min})\n      play({name: 'mainMaxY', toValue: result.max})\n      // console.warn(_atoms('mainMinY')(), _atoms('mainMaxY')())\n\n      _atoms('mainRangeY')((result.max - result.min) || 0)\n      return result\n\n    } else if (chart_mode == 0) {\n\n      const result = <{min: number, max: number}>{}\n\n      for (var c = 0; c < columns.length; c++) {\n        if (alpha_grid[c].toValue !== 0) {\n          var column = columns[c];\n          for (var i = mainMinMaxI.min; i < mainMinMaxI.max; i++) {\n            var y = column.data[i];\n            if (void 0 === result.min || result.min > y ) result.min = y\n            if (void 0 === result.max || result.max < y ) result.max = y\n          }\n        }\n      }\n      play({name: 'mainMinY', toValue: result.min})\n      play({name: 'mainMaxY', toValue: result.max})\n\n      _atoms('mainRangeY')((result.max - result.min) || 0)\n\n      return result\n    } else if (chart_mode == 1) {\n\n      const result = <{min: number, max: number}>{}\n\n      c = 0\n      if (alpha_grid[c].toValue !== 0) {\n        var column = columns[c];\n        for (var i = mainMinMaxI.min; i < mainMinMaxI.max; i++) {\n          var y = column.data[i];\n          if (void 0 === result.min || result.min > y ) result.min = y\n          if (void 0 === result.max || result.max < y ) result.max = y\n        }\n        play({name: 'mainMinY', toValue: result.min})\n        play({name: 'mainMaxY', toValue: result.max})\n      }\n\n      // console.log(result)\n// console.log(result.max - result.min)\n      _atoms('mainRangeY')((result.max - result.min) || 0)\n\n      return result\n\n    } else if (chart_mode == 3) {\n\n      const result = <{min: number, max: number}>{min: 0}\n\n      c = 0\n      if (alpha_grid[c].toValue !== 0) {\n        var column = columns[c];\n        for (var i = mainMinMaxI.min; i < mainMinMaxI.max; i++) {\n          var y = column.data[i];\n          // if (void 0 === result.min || result.min > y ) result.min = y\n          if (void 0 === result.max || result.max < y ) result.max = y\n        }\n        play({name: 'mainMinY', toValue: result.min})\n        play({name: 'mainMaxY', toValue: result.max})\n      }\n\n// console.log(result.max )\n      _atoms('mainRangeY')((result.max) || 0)\n\n      return result\n\n    } else if (chart_mode == 4) {\n\n      const result = <{min: number, max: number}>{min: 0, max: 100}\n\n      play({name: 'mainMinY', toValue: result.min})\n      play({name: 'mainMaxY', toValue: result.max})\n\n      _atoms('mainRangeY')((result.max) || 0)\n\n      return result\n    }\n    return result\n  })\n\n  _atoms.w('mainRangeY', (val: number) => {\n    let newTextY_delta = _atoms('newTextY_delta')()\n    _atoms('oldTextY_delta')(newTextY_delta)\n    play({\n      name: 'oldTextY_alpha',\n      fromValue: _atoms('newTextY_alpha')().value,\n      toValue: 0,\n    })\n\n    newTextY_delta = Math.floor(val / textCountY)\n    _atoms('newTextY_delta')(newTextY_delta)\n    play({\n      name: 'newTextY_alpha',\n      fromValue: 1 - _atoms('oldTextY_alpha')().value,\n      toValue: 1,\n    })\n  })\n\n  _atoms.m('mainScaleY', ['mainMinY', 'mainMaxY', 'mainHeight' ], (v: any) => {\n    const mainMinY = v('mainMinY')\n    const mainMaxY = v('mainMaxY')\n    const mainHeight = v('mainHeight')\n    let result: number\n    if (Number.isFinite(mainMinY.value) && Number.isFinite(mainMaxY.value))\n      result = -mainHeight / (mainMaxY.value - mainMinY.value)\n    // console.log({mainScaleY: result, mainMaxY: mainMaxY.value, mainMinY: mainMinY.value})\n    return result\n  }, {d: true})\n\n  _atoms.m('mainOffsetY', ['mainHeight', 'mainMinY', 'mainScaleY' ], (v: any) => {\n    const mainMinY = v('mainMinY')\n    const mainHeight = v('mainHeight')\n    const mainScaleY = v('mainScaleY')\n    let result: number\n    if (Number.isFinite(mainMinY.value)) result = mainHeight - mainMinY.value * mainScaleY\n      // console.log(result, mainMinY, mainHeight, mainScaleY)\n    return result\n  }, {d: true})\n\n  _atoms.m('mainMinMaxY2', ['columns', 'mainMinMaxI' ], (v: any) => {\n    const columns = v.get('columns')\n    const mainMinMaxI = v.get('mainMinMaxI')\n    const alpha_grid = _atoms('alpha_grid')()\n\n    const result = <{min: number, max: number}>{}\n\n    if (chart_mode == 1) {\n      let c = 1\n      if (alpha_grid[c].toValue !== 0) {\n        var column = columns[c];\n        for (var i = mainMinMaxI.min; i < mainMinMaxI.max; i++) {\n          var y = column.data[i];\n          if (void 0 === result.min || result.min > y ) result.min = y\n          if (void 0 === result.max || result.max < y ) result.max = y\n        }\n        play({name: 'mainMinY2', toValue: result.min})\n        play({name: 'mainMaxY2', toValue: result.max})\n      }\n\n      _atoms('mainRangeY2')((result.max - result.min) || 0)\n    }\n\n    return result\n  })\n\n  _atoms.w('mainRangeY2', (val: number) => {\n    let newTextY_delta = _atoms('newTextY2_delta')()\n    _atoms('oldTextY2_delta')(newTextY_delta)\n    play({\n      name: 'oldTextY2_alpha',\n      fromValue: _atoms('newTextY2_alpha')().value,\n      toValue: 0,\n    })\n\n    newTextY_delta = Math.floor(val / textCountY)\n    // console.log({val, newTextY_delta})\n    _atoms('newTextY2_delta')(newTextY_delta)\n    play({\n      name: 'newTextY2_alpha',\n      fromValue: 1 - _atoms('oldTextY2_alpha')().value,\n      toValue: 1,\n    })\n  })\n\n  _atoms.m('mainScaleY2', ['mainMinY2', 'mainMaxY2', 'mainHeight' ], (v: any) => {\n    const mainMinY = v('mainMinY2')\n    const mainMaxY = v('mainMaxY2')\n    const mainHeight = v('mainHeight')\n    // let result: number\n    const result =\n      Number.isFinite(mainMinY.value) && Number.isFinite(mainMaxY.value) ?\n      -mainHeight / (mainMaxY.value - mainMinY.value) :\n      1\n    // if (Number.isFinite(mainMinY.value) && Number.isFinite(mainMaxY.value))\n    //   result = -mainHeight / (mainMaxY.value - mainMinY.value)\n    return result\n  })\n\n  _atoms.m('mainOffsetY2', ['mainHeight', 'mainMinY2', 'mainScaleY2' ], (v: any) => {\n    const mainMinY = v('mainMinY2')\n    const mainHeight = v('mainHeight')\n    const mainScaleY = v('mainScaleY2')\n    // let result: number\n    // if (Number.isFinite(mainMinY.value)) result = mainHeight - mainMinY.value * mainScaleY\n    const result =\n      Number.isFinite(mainMinY.value) ?\n      mainHeight - mainMinY.value * mainScaleY :\n      0\n    return result\n  })\n  // _atoms.m('mainScaleY2', ['mainRangeY2', 'mainHeight' ], (v: any) => {\n  //   const mainRangeY = v(0).value\n  //   if (mainRangeY) return -v(1) / mainRangeY\n  // })\n\n  // _atoms.m('mainOffsetY2', ['mainHeight', 'mainMinMaxY2', 'mainScaleY2' ], (v: any) =>\n  //   v(0) - v(1).min * v(2)\n  // )\n\n  function getCleanContext(name_prefix: string, v: any, ctx_atom_state: AtomState) {\n    const ctx = v(name_prefix + '_context')\n    if (ctx_atom_state == AtomState.valid) {\n      ctx.clearRect(0, 0, v(name_prefix + '_width'), v(name_prefix + '_height'))\n    }\n    return ctx\n  }\n\n  let grid_renderer_raf: any\n  let grid_renderer_invalid_masters: any\n  _atoms.def('grid_renderer', {\n    masters: [\n      'xColumn',\n      'columns',\n      'grid_canvas_context',\n      'grid_canvas_width',\n      'grid_canvas_height',\n      'mainHeight',\n      'paddingHor',\n      'width',\n      'scroll_width',\n\n      'mainMinMaxI',\n      'mainMinMaxX',\n      'mainScaleX',\n      'mainOffsetX',\n      'intervalX',\n\n      'alpha_grid',\n\n      'oldTextX_delta',\n      'oldTextX_alpha',\n      'newTextX_delta',\n      'newTextX_alpha',\n\n      'oldTextY_delta',\n      'oldTextY_alpha',\n      'newTextY_delta',\n      'newTextY_alpha',\n\n      'oldTextY2_delta',\n      'oldTextY2_alpha',\n      'newTextY2_delta',\n      'newTextY2_alpha',\n\n      'mainMinMaxY',\n      'mainOffsetY',\n      'mainScaleY',\n      'previewMinMaxY',\n      'theme',\n      'textXWidth',\n    // ].concat( chart_mode === 1 ? [\n      'mainMinMaxY2',\n      'mainOffsetY2',\n      'mainScaleY2',\n      'previewMaxY',\n    ],\n    // : []),\n    value(p: MasterProvider, val?: boolean) {\n      val = void 0\n      const ctx_atom_state = p.atoms().grid_canvas_context.state()\n      const v = p.values()\n        // if (!v) {\n          // const atoms = p.atoms()\n          // console.warn('grid_renderer', Object.keys(atoms).filter(key => void 0 === atoms[key].value()))\n        // }\n\n      const invalid_atoms = Object.keys(p.atoms()).filter(name => p.atoms()[name].state() == AtomState.invalid)\n      if (!v) {\n        // console.warn('here')\n        const atoms = p.atoms()\n        if (grid_renderer_raf === void 0) grid_renderer_raf = setTimeout(() => {\n          // console.error('grid_renderer_raf')\n          grid_renderer_raf = void 0\n          let grid_renderer_invalid_masters: string[]\n          try {\n            grid_renderer_invalid_masters = Object.keys(atoms).filter(key =>\n              !atoms[key].is_valid_value(atoms[key].value())\n            )\n          } catch (err) {\n            console.error(err)\n          }\n          console.warn('grid_renderer', grid_renderer_invalid_masters)\n          // Object.keys(grid_renderer_invalid_masters).forEach()\n          // console.log(_atoms('mainScaleY')())\n        }, 100)\n      }\n      if (v) {\n        // return\n        // console.error('grid_renderer')\n        clearTimeout(grid_renderer_raf)\n        // return true\n        // console.log(invalid_atoms)\n        // console.error('here'  )\n        const xColumn = v('xColumn')\n        const columns = v('columns')\n        const paddingHor = v('paddingHor')\n        const width = v('width')\n        const mainHeight = v('mainHeight')\n\n        const grid_canvas_context = getCleanContext('grid_canvas', v, ctx_atom_state)\n\n\n        // const mainMinMaxY.min = mainMinMaxY.min\n        // const mainMinMaxY.max = mainMinMaxY.max\n        const scroll_width = v('scroll_width')\n        const mainMinMaxI = v('mainMinMaxI')\n        // const mainMinMaxI.min = mainMinMaxI.min\n        // const mainMinMaxI.max = mainMinMaxI.max\n        const mainScaleX = v('mainScaleX')\n        const mainOffsetX = v('mainOffsetX')\n        const intervalX = v('intervalX')\n        const mainMinMaxX = v('mainMinMaxX')\n        // const mainMinMaxX.max = mainMinMaxX.max\n        // const mainMinMaxX.min = mainMinMaxX.min\n\n        const mainMinMaxY = v('mainMinMaxY')\n        const mainOffsetY = v('mainOffsetY')\n        const mainScaleY = v('mainScaleY')\n\n        const alpha_grid = v('alpha_grid')\n        const oldTextX_alpha = v('oldTextX_alpha').value\n        const oldTextX_delta = v('oldTextX_delta')\n        const newTextX_alpha = v('newTextX_alpha').value\n        const newTextX_delta = v('newTextX_delta')\n\n        const oldTextY_alpha = v('oldTextY_alpha').value\n        const oldTextY_delta = v('oldTextY_delta')\n        const newTextY_alpha = v('newTextY_alpha').value\n        const newTextY_delta = v('newTextY_delta')\n        const previewMinMaxY = v('previewMinMaxY')\n\n        const textXWidth = v('textXWidth')\n\n        // console.log(mainScaleY)\n        // console.warn({mainScaleY})\n\n        if (chart_mode == 0) {\n\n          const minMaxI = mainMinMaxI\n          const lineWidth = mainLineWidth\n          const scaleX = mainScaleX\n          const offsetX = mainOffsetX\n          const scaleY = mainScaleY\n          const offsetY = mainOffsetY\n\n          for (var c = 0; c < columns.length; c++) {\n            var yColumn = columns[c];\n            if (alpha_grid[c].value === 0) continue\n            grid_canvas_context.globalAlpha = alpha_grid[c].value\n            grid_canvas_context.lineWidth = lineWidth;\n            grid_canvas_context.strokeStyle = yColumn.color\n            renderPath(grid_canvas_context, scroll_width, xColumn, yColumn, minMaxI.min, minMaxI.max, scaleX, scaleY, offsetX, offsetY);\n          }\n\n        } else if (chart_mode == 1) {\n\n          let c = 0\n          if (alpha_grid[c].value !== 0) {\n            const minMaxI = mainMinMaxI\n            const lineWidth = mainLineWidth\n            const scaleX = mainScaleX\n            const offsetX = mainOffsetX\n            const scaleY = mainScaleY\n            const offsetY = mainOffsetY\n\n            var yColumn = columns[c];\n            grid_canvas_context.globalAlpha = alpha_grid[c].value\n            grid_canvas_context.lineWidth = mainLineWidth;\n            grid_canvas_context.strokeStyle = yColumn.color\n            renderPath(grid_canvas_context, scroll_width, xColumn, yColumn, mainMinMaxI.min, mainMinMaxI.max, mainScaleX, mainScaleY, mainOffsetX, mainOffsetY);\n          }\n\n          c = 1\n          if (alpha_grid[c].value !== 0) {\n\n            const mainMinMaxY = v('mainMinMaxY2')\n            const mainOffsetY = v('mainOffsetY2')\n            const mainScaleY = v('mainScaleY2')\n            var yColumn = columns[c];\n            grid_canvas_context.globalAlpha = alpha_grid[c].value\n            grid_canvas_context.lineWidth = mainLineWidth;\n            grid_canvas_context.strokeStyle = yColumn.color\n            renderPath(grid_canvas_context, scroll_width, xColumn, yColumn, mainMinMaxI.min, mainMinMaxI.max, mainScaleX, mainScaleY, mainOffsetX, mainOffsetY);\n          }\n        } else if (chart_mode == 2 ) {\n          const ctx = grid_canvas_context\n          const i_min = mainMinMaxI.min\n          const i_max = mainMinMaxI.max\n          const scaleY = mainScaleY\n          // const prevScaleY = xColumn.prevMainScaleY\n          const previewMaxY = v('previewMaxY')\n          const offsetY = mainOffsetY\n          const scaleX = mainScaleX\n          const offsetX = mainOffsetX\n          const minMaxY = mainMinMaxY\n          const drawAreaHeight = mainHeight\n          grid_canvas_context.globalAlpha = 1\n          // console.log({previewMaxY})\n\n          // console.log({scaleY, prevScaleY, offsetY}, previewMinMaxY.max)\n\n          const width = intervalX * scaleX + 1\n          let count = 0\n          for (let i = Math.max(1, i_min - 10); i < Math.min(i_max + 1, xColumn.data[i]); i++) {\n            const x = Math.round((xColumn.data[i] - intervalX / 2) * scaleX + offsetX)\n            let total = 0\n            for (var c = 0; c < columns.length; c++) {\n              const h = 100 * columns[c].data[i] * alpha_grid[c].value / previewMaxY.value\n              const height = Math.round(-h * scaleY)\n              const y = Math.round(drawAreaHeight - height + total * scaleY)\n              ctx.fillStyle = columns[c].color\n              ctx.fillRect(x, y, width, height)\n              total += h\n            }\n          }\n        } else if (chart_mode == 3) {\n          const ctx = grid_canvas_context\n          const i_min = mainMinMaxI.min\n          const i_max = mainMinMaxI.max\n          const scaleY = mainScaleY\n          const offsetY = mainOffsetY\n          const scaleX = mainScaleX\n          const offsetX = mainOffsetX\n          const minMaxY = mainMinMaxY\n          const drawAreaHeight = mainHeight\n          grid_canvas_context.globalAlpha = 1\n\n          const width = intervalX * scaleX + 3\n          let count = 0\n          for (let i = Math.max(1, i_min - 10); i < Math.min(i_max + 1, xColumn.data[i]); i++) {\n            const x = Math.round((xColumn.data[i] - intervalX / 2) * scaleX + offsetX)\n            let total = 0\n            for (var c = 0; c < columns.length; c++) {\n              const h = columns[c].data[i] * alpha_grid[c].value\n              const height = Math.round(-h * scaleY)\n              const y = Math.round(drawAreaHeight - height + total * scaleY)\n              ctx.fillStyle = columns[c].color\n              ctx.fillRect(x, y, width, height)\n              total += h\n            }\n          }\n        } else if (chart_mode == 4) {\n          // console.log(grid_canvas_context.globalAlpha)\n          drawChart4(\n            alpha_grid,\n            xColumn,\n            columns,\n            intervalX,\n            mainScaleX,\n            mainOffsetX,\n            mainMinMaxI.min,\n            mainMinMaxI.max,\n            mainScaleY,\n            mainOffsetY,\n            mainHeight,\n            v('grid_canvas_width'),\n            grid_canvas_context\n          )\n\n          // {\n          //   grid_canvas_context.globalAlpha = alpha;\n\n          //   for (var i = 1; i < textCountY; i++) {\n          //       var value = mainMinMaxY.min + delta * i;\n          //       var y = mainToScreenY(value);\n          //       grid_canvas_context.fillText(formatNumber(value, true), _atoms('paddingHor')() * pixelRatio, y + textYMargin);\n          //   }\n          // }\n        }\n\n        const theme = v('theme')\n\n        grid_canvas_context.strokeStyle = xLineStyle[theme][chart_mode].color\n        // const lineOpacity = 0.1\n        grid_canvas_context.lineWidth = lineWidth;\n\n        grid_canvas_context.globalAlpha = 1 * xLineStyle[theme][chart_mode].opacity\n        // grid_canvas_context.strokeStyle = _colors.zeroLine;\n        grid_canvas_context.beginPath();\n        grid_canvas_context.moveTo(paddingHor * pixelRatio, mainHeight);\n        grid_canvas_context.lineTo((width - paddingHor) * pixelRatio, mainHeight);\n        grid_canvas_context.stroke();\n\n        function renderLinesY(alpha: number, delta: number, minMaxY: any, offsetY: number, scaleY: number  ) {\n          if (alpha > 0) {\n            grid_canvas_context.globalAlpha = alpha * xLineStyle[theme][chart_mode].opacity\n\n            for (var i = 1; i < textCountY; i++) {\n                var value = minMaxY.min + delta * i;\n                var y = mainToScreenY(value, scaleY, offsetY);\n                // console.log(y, mainMinMaxY.min, textY.delta)\n                grid_canvas_context.beginPath();\n                grid_canvas_context.moveTo(paddingHor * pixelRatio, y);\n                grid_canvas_context.lineTo((width - paddingHor) * pixelRatio, y);\n                grid_canvas_context.stroke();\n            }\n          }\n        }\n\n        renderLinesY(oldTextY_alpha, oldTextY_delta, mainMinMaxY, mainOffsetY, mainScaleY);\n        renderLinesY(newTextY_alpha, newTextY_delta, mainMinMaxY, mainOffsetY, mainScaleY);\n\n        if (chart_mode == 1) {\n          const oldTextY_alpha = v('oldTextY2_alpha').value\n          const oldTextY_delta = v('oldTextY2_delta')\n          const newTextY_alpha = v('newTextY2_alpha').value\n          const newTextY_delta = v('newTextY2_delta')\n          const mainMinMaxY = v('mainMinMaxY2')\n          const mainOffsetY = v('mainOffsetY2')\n          const mainScaleY = v('mainScaleY2')\n          renderLinesY(oldTextY_alpha, oldTextY_delta, mainMinMaxY, mainOffsetY, mainScaleY);\n          renderLinesY(newTextY_alpha, newTextY_delta, mainMinMaxY, mainOffsetY, mainScaleY);\n        }\n\n\n        function mainToScreenX(x: number) {\n            return x * mainScaleX + mainOffsetX;\n        }\n\n        function mainToScreenY(y: number, scaleY: number, offsetY: number) {\n            return y * scaleY + offsetY;\n        }\n\n        function renderTextsX(alpha: number, delta: number, skipStep: boolean) {\n          if (alpha > 0) {\n            grid_canvas_context.globalAlpha = alpha * xTextStyle[theme][chart_mode].opacity\n            // console.log(grid_canvas_context.globalAlpha)\n\n            if (skipStep) delta *= 2;\n\n            var endI = Math.min(Math.ceil(mainMinMaxX.max / intervalX / delta) * delta, xColumn.data.length);\n            if (skipStep) endI -= delta;\n            var startI = Math.max(mainMinMaxI.min - 1, 1);\n            // console.log({startI, endI, delta, textXWidth}, mainMinMaxI.min)\n\n            for (var i = endI - 1; i >= startI; i -= delta) {\n              var value = xColumn.data[i];\n              var x = mainToScreenX(value);\n              var offsetX = 0;\n              if (i === xColumn.data.length - 1) {\n                offsetX = -textXWidth;\n              } else if (i > 1) {\n                offsetX = -(textXWidth / 2);\n              }\n              grid_canvas_context.fillText(formatDate(value, true), x + offsetX, mainHeight + textXMargin);\n            }\n          }\n        }\n\n        const xTextStyle = {\n          'day': {\n            0: { color: '#8E8E93', opacity: 1 },\n            1: { color: '#8E8E93', opacity: 1 },\n            2: { color: '#8E8E93', opacity: 1 },\n\n            3: { color: '#252529', opacity: .5 },\n            4: { color: '#252529', opacity: .5 },\n          },\n          'night': {\n            0: { color: '#A3B1C2', opacity: .6 },\n            1: { color: '#A3B1C2', opacity: .6 },\n            2: { color: '#A3B1C2', opacity: .6 },\n            3: { color: '#A3B1C2', opacity: .6 },\n            4: { color: '#A3B1C2', opacity: .6 },\n          },\n        }\n        grid_canvas_context.fillStyle = xTextStyle[theme][chart_mode].color\n        grid_canvas_context.font = font;\n        var skipStepNew = oldTextX_delta > newTextX_delta;\n        // console.log({oldTextX_alpha, oldTextX_delta, newTextX_alpha, newTextX_delta, skipStepNew})\n        // console.log({oldTextX_alpha})\n        // renderTextsX(oldTextX_alpha, oldTextX_delta, !skipStepNew);\n        // renderTextsX(newTextX_alpha, newTextX_delta, skipStepNew);\n        renderTextsX(oldTextX_alpha, oldTextX_delta, !skipStepNew);\n        renderTextsX(newTextX_alpha, newTextX_delta, false);\n\n        function formatNumber(n: number, short = false) {\n            var abs = Math.abs(n);\n            if (abs > 1000000000 && short) return (n / 1000000000).toFixed(2) + 'B';\n            if (abs > 1000000 && short) return (n / 1000000).toFixed(2) + 'M';\n            if (abs > 1000 && short) return (n / 1000).toFixed(1) + 'K';\n\n            if (abs > 1) {\n                var s = abs.toFixed(0);\n                var formatted = n < 0 ? '-' : '';\n                for (var i = 0; i < s.length; i++) {\n                    formatted += s.charAt(i);\n                    if ((s.length - 1 - i) % 3 === 0) formatted += ' ';\n                }\n                return formatted;\n            }\n\n            return n.toString()\n        }\n        function renderTextsY(alpha: number, delta: number, offsetY: number, scaleY: number, minMaxY: any, left: boolean) {\n          if (alpha > 0) {\n            grid_canvas_context.globalAlpha = alpha * (chart_mode == 1 ? 1 : yTextStyle[theme][chart_mode].opacity)\n\n            for (var i = 1; i < textCountY; i++) {\n              var value = minMaxY.min + delta * i;\n              var y = mainToScreenY(value, scaleY, offsetY);\n              grid_canvas_context.fillText(formatNumber(value, true), left ? paddingHor * pixelRatio : (width - paddingHor - 30) * pixelRatio, y + textYMargin);\n            }\n          }\n        }\n\n        const yTextStyle = {\n          'day': {\n            0: { color: '#8E8E93', opacity: 1 },\n            1: { color: '#8E8E93', opacity: 1 },\n            2: { color: '#8E8E93', opacity: 1 },\n\n            3: { color: '#252529', opacity: .5 },\n            4: { color: '#252529', opacity: .5 },\n          },\n          'night': {\n            0: { color: '#A3B1C2', opacity: .6 },\n            1: { color: '#A3B1C2', opacity: .6 },\n            2: { color: '#A3B1C2', opacity: .6 },\n            3: { color: '#ECF2F8', opacity: .5 },\n            4: { color: '#ECF2F8', opacity: .5 },\n          },\n        }\n\n        grid_canvas_context.fillStyle = yTextStyle[theme][chart_mode].color\n        if (chart_mode == 1) grid_canvas_context.fillStyle = columns[0].color;\n\n        renderTextsY(oldTextY_alpha, oldTextY_delta, mainOffsetY, mainScaleY, mainMinMaxY, true);\n        renderTextsY(newTextY_alpha, newTextY_delta, mainOffsetY, mainScaleY, mainMinMaxY, true);\n\n        if (Number.isFinite(mainMinMaxY.min)) {\n          grid_canvas_context.globalAlpha = (chart_mode !== 1 ? 1  * yTextStyle[theme][chart_mode].opacity : alpha_grid[0].value);\n          grid_canvas_context.fillText(formatNumber(mainMinMaxY.min), paddingHor * pixelRatio, mainHeight + textYMargin);\n        }\n\n\n        if (chart_mode == 1) {\n          const oldTextY_alpha = v('oldTextY2_alpha').value\n          const oldTextY_delta = v('oldTextY2_delta')\n          const newTextY_alpha = v('newTextY2_alpha').value\n          const newTextY_delta = v('newTextY2_delta')\n          const mainOffsetY = v('mainOffsetY2')\n          const mainScaleY = v('mainScaleY2')\n          const mainMinMaxY = v('mainMinMaxY2')\n          grid_canvas_context.fillStyle = columns[1].color;\n          renderTextsY(oldTextY_alpha, oldTextY_delta, mainOffsetY, mainScaleY, mainMinMaxY, false);\n          renderTextsY(newTextY_alpha, newTextY_delta, mainOffsetY, mainScaleY, mainMinMaxY, false);\n\n          const mainMinMaxY2 = _atoms('mainMinMaxY2')()\n          if (Number.isFinite(mainMinMaxY2.min)) {\n            grid_canvas_context.globalAlpha = alpha_grid[1].value;\n            grid_canvas_context.fillText(formatNumber(mainMinMaxY2.min), (width - paddingHor - 30) * pixelRatio, mainHeight + textYMargin);\n          }\n        }\n      }\n      return val\n    },\n  }, AtomType.force)\n\n  function drawChart4(\n    alpha_grid: any,\n    xColumn: any,\n    columns: any,\n    intervalX: number,\n    scaleX: number,\n    offsetX: number,\n    i_min: number,\n    i_max: number,\n    scaleY: number,\n    offsetY: number,\n    drawAreaHeight: number,\n    canvas_width: number,\n    ctx: any\n  ) {\n    grid_canvas_context.globalAlpha = 1\n    const width = intervalX * scaleX + 1\n    let count = 0\n    const points = [] as any[]//<{x: number, y: number}>[]\n    for (var c = 0; c < columns.length; c++) {\n      points.push([])\n    }\n    // for (let i = Math.max(0, i_min - 1), count = Math.min(i_max + 2, xColumn.data.length - 1); i < count; i++) {\n    for (let i = Math.max(1, i_min - 10), count = Math.min(i_max + 10, xColumn.data.length - 1); i < count; i++) {\n      const x = Math.round(xColumn.data[i] * scaleX + offsetX)\n      let total = 0\n      for (var c = 0; c < columns.length; c++) {\n        const h = columns[c].data[i] * alpha_grid[c].value\n        total += h\n      }\n      const specific = [] as any[]\n      for (var c = 0; c < columns.length; c++) {\n        const h = columns[c].data[i] * alpha_grid[c].value\n        specific.push(h / total * 100)\n      }\n\n      total = 0\n      for (var c = 0; c < columns.length; c++) {\n        const h = specific[c]\n        const height = -h * scaleY\n        const y = Math.round(drawAreaHeight - height + total * scaleY)\n        points[c].push({x, y})\n        total += h\n      }\n    }\n    for (let c = points.length - 1; c >= 0; c--) {\n      if (c == 0) {\n        ctx.beginPath()\n        ctx.moveTo(points[c][points[c].length - 1].x, drawAreaHeight)\n        ctx.lineTo(points[c][0].x, drawAreaHeight)\n        for (let i = 0, count = points[c].length; i < count; i++) {\n          const point = points[c][i]\n          ctx.lineTo(point.x, point.y)\n        }\n      } else if ( c < points.length - 1 ) {\n        ctx.beginPath()\n        const sub_line = points[c - 1]\n        const line = points[c]\n        const x = line[line.length - 1].x\n        const y = sub_line[sub_line.length - 1].y\n        ctx.moveTo(x, y)\n        for (let i = sub_line.length - 2; i >= 0; i--) {\n          const point = sub_line[i]\n          ctx.lineTo(point.x, point.y)\n        }\n        for (let i = 0; i < line.length; i++) {\n          const point = line[i]\n          ctx.lineTo(point.x, point.y)\n        }\n      } else {\n        ctx.beginPath()\n        const sub_line = points[c - 1]\n        const x = sub_line[sub_line.length - 1].x\n        const y = sub_line[sub_line.length - 1].y\n        ctx.moveTo(x, y)\n        for (let i = sub_line.length - 2; i >= 0; i--) {\n          const point = sub_line[i]\n          ctx.lineTo(point.x, point.y)\n        }\n        ctx.lineTo(sub_line[0].x, 0)\n        ctx.lineTo(sub_line[sub_line.length - 1].x, 0)\n      }\n      ctx.closePath()\n      ctx.fillStyle = columns[c].color\n      ctx.fill()\n    }\n  }\n\n  let scroll_renderer_raf: any\n  let scroll_renderer_invalid_masters: any\n  _atoms.def('scroll_renderer', {\n    masters: [\n      'xColumn',\n      'intervalX',\n      'columns',\n      'scroll_height',\n      'scroll_width',\n      'scroll_canvas_context',\n      'scroll_canvas_width',\n      'scroll_canvas_height',\n      'previewOffsetX',\n      'previewScaleX',\n      'alpha_scroll',\n      'alpha_grid',\n      'previewMinMaxY',\n      'previewOffsetY',\n      'previewScaleY',\n      'previewMinMaxY2',\n      'previewOffsetY2',\n      'previewScaleY2',\n    ],\n    value(p: MasterProvider, val?: boolean) {\n      val = void 0\n      const ctx_atom_state = p.atoms().scroll_canvas_context.state()\n      const v = p.values()\n\n      // if (!v) {\n      //   const atoms = p.atoms()\n      //   scroll_renderer_invalid_masters = Object.keys(atoms).filter(key => AtomState.invalid === atoms[key].state())\n      //   if (scroll_renderer_raf === void 0) scroll_renderer_raf = setTimeout(() => {\n      //     scroll_renderer_raf = void 0\n      //     // scroll_renderer_invalid_masters = Object.keys(atoms).filter(key => !atoms[key].is_valid_value(atoms[key].value()))\n      //     console.log('scroll_renderer stopped by', scroll_renderer_invalid_masters, _atoms('scroll_width')())\n      //   }, 100)\n      // }\n      // console.log('here')\n      if (v) {\n        clearTimeout(scroll_renderer_raf)\n        const xColumn = v('xColumn')\n        const intervalX = v('intervalX')\n        const columns = v('columns')\n        const scroll_height = v('scroll_height')\n        // const previewRangeY = v('previewRangeY')\n        // console.error(previewRangeY, previewMinMaxY)\n        const grid_canvas_context = getCleanContext('scroll_canvas', v, ctx_atom_state)\n        const previewOffsetX = v('previewOffsetX')\n        const previewScaleX = v('previewScaleX')\n        const scroll_width = v('scroll_width')\n        const alpha_scroll = v('alpha_scroll')\n        const alpha_grid = v('alpha_grid')\n\n        const previewScaleY = v('previewScaleY')\n        const previewOffsetY = v('previewOffsetY')\n        const previewMinMaxY = v('previewMinMaxY')\n        // console.log(chart_mode)\n        if (chart_mode == 0) {\n\n          const minMaxI = {min: 1, max: xColumn.data.length}\n          const lineWidth = previewLineWidth\n\n          const scaleX = previewScaleX\n          const offsetX = previewOffsetX\n          const scaleY = previewScaleY\n          const offsetY = previewOffsetY\n\n          for (var c = 0; c < columns.length; c++) {\n            var yColumn = columns[c];\n            if (alpha_grid[c].value === 0) continue\n            grid_canvas_context.globalAlpha = alpha_grid[c].value\n            grid_canvas_context.lineWidth = lineWidth;\n            grid_canvas_context.strokeStyle = yColumn.color\n            renderPath(grid_canvas_context, scroll_width, xColumn, yColumn, minMaxI.min, minMaxI.max, scaleX, scaleY, offsetX, offsetY);\n          }\n        } else if (chart_mode === 1) {\n\n          const minMaxI = {min: 1, max: xColumn.data.length}\n          const lineWidth = previewLineWidth\n          // console.log({previewOffsetY, previewScaleY})\n          const scaleX = previewScaleX\n          const offsetX = previewOffsetX\n\n          c = 0\n          if (alpha_grid[c].value !== 0) {\n            var yColumn = columns[c];\n\n            const scaleX = previewScaleX\n            const offsetX = previewOffsetX\n            const scaleY = previewScaleY\n            const offsetY = previewOffsetY\n\n            grid_canvas_context.globalAlpha = alpha_grid[c].value\n            grid_canvas_context.lineWidth = lineWidth;\n            grid_canvas_context.strokeStyle = yColumn.color\n            renderPath(grid_canvas_context, scroll_width, xColumn, yColumn, minMaxI.min, minMaxI.max, scaleX, scaleY, offsetX, offsetY);\n          }\n\n          c = 1\n          if (alpha_grid[c].value !== 0) {\n            var yColumn = columns[c];\n\n            const scaleY = v('previewScaleY2')\n            const offsetY = v('previewOffsetY2')\n\n            grid_canvas_context.globalAlpha = alpha_grid[c].value\n            grid_canvas_context.lineWidth = lineWidth;\n            grid_canvas_context.strokeStyle = yColumn.color\n            renderPath(grid_canvas_context, scroll_width, xColumn, yColumn, minMaxI.min, minMaxI.max, scaleX, scaleY, offsetX, offsetY);\n          }\n\n        // } else if (chart_mode === 2) {\n        // } else if (chart_mode == 2 || chart_mode == 3 ) {\n        //   // console.log('HERE')\n        //   const ctx = scroll_canvas_context\n        //   const i_min = 1\n        //   const i_max = xColumn.data.length\n        //   const scaleY = previewScaleY\n        //   const offsetY = previewOffsetY\n        //   const scaleX = previewScaleX\n        //   const offsetX = previewOffsetX\n        //   const minMaxY = previewMinMaxY\n        //   const drawAreaHeight = scroll_height * pixelRatio\n\n        //   const width = Math.round(intervalX * scaleX + 1)\n        //   let count = 0\n        //   // for (let i = i_min; i < i_max; i++) {\n        //   for (let i = i_min; i < i_min + 2; i++) {\n        //     const x = Math.round(xColumn.data[i] * scaleX + offsetX)\n        //     let total = 0\n        //     for (var c = 0; c < columns.length; c++) {\n        //       const h = 100 * columns[c].data[i] / previewMinMaxY.max * alpha_grid[c].value\n        //       console.log(Math.round(h))\n        //       const height = Math.round(-h * scaleY)\n        //       const y = Math.round(drawAreaHeight - height + total * scaleY)\n        //       ctx.fillStyle = columns[c].color\n        //       console.log({x, y, width, height, h, scaleY, total}, previewMinMaxY.max)\n        //       ctx.fillRect(x, y, width, height)\n        //       total += h\n        //     }\n        //   }\n        // } else if (chart_mode == 3) {\n        } else if (chart_mode == 2 || chart_mode == 3 ) {\n          const ctx = scroll_canvas_context\n          const i_min = 1\n          const i_max = xColumn.data.length\n          const scaleY = previewScaleY\n          const offsetY = previewOffsetY\n          const scaleX = previewScaleX\n          const offsetX = previewOffsetX\n          const minMaxY = previewMinMaxY\n          const drawAreaHeight = scroll_height * pixelRatio\n\n          const width = intervalX * scaleX + 1\n          let count = 0\n          for (let i = i_min; i < i_max; i++) {\n            const x = Math.round(xColumn.data[i] * scaleX + offsetX)\n            let total = 0\n            for (var c = 0; c < columns.length; c++) {\n              const h = columns[c].data[i] * alpha_grid[c].value\n              const height = Math.round(-h * scaleY)\n              const y = drawAreaHeight - height + total * scaleY\n              ctx.fillStyle = columns[c].color\n              ctx.fillRect(x, y, width, height)\n              total += h\n            }\n          }\n        } else if (chart_mode === 4) {\n          drawChart4(\n            alpha_grid,\n            xColumn,\n            columns,\n            intervalX,\n            previewScaleX,\n            previewOffsetX,\n            1,\n            xColumn.data.length,\n            previewScaleY,\n            previewOffsetY,\n            scroll_height * pixelRatio,\n            scroll_width * pixelRatio,\n            scroll_canvas_context\n          )\n        }\n        val = true\n      }\n      return val\n    },\n  }, AtomType.force)\n\n  function renderPath(canvas: any, scroll_width: number,  xColumn: any, yColumn: any, minI: number, maxI: number, scaleX: number, scaleY: number, offsetX: number, offsetY: number) {\n\n    canvas.beginPath();\n    canvas.lineJoin = 'bevel';\n    canvas.lineCap = 'butt';\n\n    {\n      const x = Math.round(xColumn.data[minI] * scaleX + offsetX)\n      const y = Math.round(yColumn.data[minI] * scaleY + offsetY)\n      canvas.moveTo(x, y);\n    }\n\n    var step = Math.floor((maxI - minI) / scroll_width)\n    if (step < 1) step = 1;\n\n    for (var i = minI + 1; i < maxI; i += step) {\n      const x = Math.round(xColumn.data[i] * scaleX + offsetX)\n      const y = Math.round(yColumn.data[i] * scaleY + offsetY)\n      // console.log(x, y, scaleY)\n      canvas.lineTo(x, y);\n    }\n\n    canvas.stroke();\n  }\n\n  // ==========\n\n  function props(val?: any) {\n    const names = Object.keys(val)\n    for (let i = 0, count = names.length; i < count; i++) {\n      const name = names[i]\n      // if (name === 'width') console.log(name, val[name])\n      _atoms(name)(val[name])\n      // if (name === 'width') console.log(_atoms('width')())\n    }\n    _scroll_mid_width_min = void 0\n  }\n\n  // ==========\n\n  let scrollParams: { action: ScrollAction, clientX: number, left: number, width: number, total: number }\n\n  function scrollMouseDownEventListener(event: MouseEvent | TouchEvent) {\n    let isTouchEvent = !!(event as TouchEvent).touches\n    let precisionVert = isTouchEvent ? touchPrecision : 0\n    let precisionHor = isTouchEvent ? touchPrecision : 0\n    const clientX = isTouchEvent ? (event as TouchEvent).touches[0].clientX : (event as MouseEvent).clientX\n    const clientY = isTouchEvent ? (event as TouchEvent).touches[0].clientY : (event as MouseEvent).clientY\n    const clientRect = scroll_mid_elem.dom_node().getBoundingClientRect()\n    if (clientRect.top - precisionVert <= clientY && clientY <= clientRect.bottom + precisionVert) {\n      let action = ScrollAction.none\n      if (clientX - precisionHor - scroll_selector_width <= clientRect.left && clientRect.left <= clientX + precisionHor) {\n        action = ScrollAction.left\n      } else if (clientX - precisionHor <= clientRect.right && clientRect.right <= clientX + precisionHor + scroll_selector_width) {\n        action = ScrollAction.right\n      } else if (clientRect.left + precisionHor <= clientX && clientX <= clientRect.right) {\n        action = ScrollAction.drag\n        if (!isTouchEvent) setBodyCursor({origin: self, cursor: 'grabbing'})\n      }\n      if (action != ScrollAction.none) scrollParams = {action, clientX, ..._atoms('scroll_mid')()}\n    }\n  }\n\n  let lastMoveClientX: number\n  let lastMoveClientY: number\n  function scrollMouseMoveEventListener(event: MouseEvent | TouchEvent) {\n    const isTouchEvent = !!(event as TouchEvent).touches\n    const clientX = isTouchEvent ? (event as TouchEvent).touches[0].clientX : (event as MouseEvent).clientX\n    const clientY = isTouchEvent ? (event as TouchEvent).touches[0].clientY : (event as MouseEvent).clientY\n    let skipProcessing = false\n    if (isTouchEvent && lastMoveClientX !== void 0) {\n      const deltaX = Math.round(Math.abs(clientX - lastMoveClientX))\n      const deltaY = Math.round(Math.abs(clientY - lastMoveClientY))\n      if (deltaY && deltaX / deltaY < 2) skipProcessing = true\n    }\n    lastMoveClientX = clientX\n    lastMoveClientY = clientY\n    if (scrollParams) {\n      let width = scrollParams.width, left = scrollParams.left\n      let delta = clientX - scrollParams.clientX\n      if (scrollParams.action == ScrollAction.drag) {\n        left = scrollParams.left + delta\n      } else if (scrollParams.action == ScrollAction.right) {\n        if (scrollParams.width + delta < scroll_mid_width_min()) {\n          delta = scroll_mid_width_min() - scrollParams.width\n        } else if (scrollParams.left + scrollParams.width + delta > scrollParams.total) {\n          delta = scrollParams.total - (scrollParams.left + scrollParams.width)\n        }\n        width = scrollParams.width + delta\n      } else if (scrollParams.action == ScrollAction.left) {\n        let delta = clientX - scrollParams.clientX\n        if (scrollParams.width - delta < scroll_mid_width_min()) {\n          delta = scrollParams.width - scroll_mid_width_min()\n        } else if (scrollParams.left + delta < 0) {\n          delta = -scrollParams.left\n        }\n        width = scrollParams.width - delta\n        left = scrollParams.left + delta\n      }\n\n      _atoms('scroll_mid')({width, left})\n    } else if (!isTouchEvent) {\n      const clientRect = scroll_mid_elem.dom_node().getBoundingClientRect()\n      const cursor = (\n        clientRect.top <= clientY && clientY <= clientRect.bottom\n      ) && (\n        clientX - scroll_selector_width <= clientRect.left && clientRect.left <= clientX ||\n        clientX <= clientRect.right && clientRect.right <= clientX + scroll_selector_width ||\n        false\n      ) ? 'col-resize' : 'default'\n      setBodyCursor({origin: self, cursor})\n    }\n    if (isTouchEvent && scrollParams && event.cancelable) { // https://stackoverflow.com/questions/26478267/touch-move-getting-stuck-ignored-attempt-to-cancel-a-touchmove\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    _scroll_mid_width_min = void 0\n  }\n  function scrollMouseUpEventListener() {\n    scrollParams = void 0\n    lastMoveClientX = void 0\n    lastMoveClientY = void 0\n    setBodyCursor({origin: self, cursor: 'default'})\n  }\n\n  document.body.addEventListener('mousedown', scrollMouseDownEventListener)\n  document.body.addEventListener('touchstart', scrollMouseDownEventListener, {passive: true})\n\n  document.body.addEventListener('mousemove', scrollMouseMoveEventListener)\n  document.body.addEventListener('touchmove', scrollMouseMoveEventListener, {passive: false})\n\n  document.body.addEventListener('mouseup', scrollMouseUpEventListener, {passive: true})\n  document.body.addEventListener('touchend', scrollMouseUpEventListener, {passive: true})\n  document.body.addEventListener('touchcancel', scrollMouseUpEventListener, {passive: true})\n\n  const self = {...elem, props}\n\n  return self\n}\n\n\n// console.log('LOADED')\n// ============================================================================\n}\n"]}